// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: client/pb/oidb/oidb0x5eb.proto

package oidb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type D5EBReqBody struct {
	Uins                              []uint64 `protobuf:"varint,1,rep,name=uins" json:"uins,omitempty"`
	MaxPackageSize                    uint32   `protobuf:"varint,3,opt,name=max_package_size,json=maxPackageSize" json:"max_package_size"`
	Openid                            [][]byte `protobuf:"bytes,4,rep,name=openid" json:"openid,omitempty"`
	Appid                             uint32   `protobuf:"varint,5,opt,name=appid" json:"appid"`
	ReqNick                           uint32   `protobuf:"varint,20002,opt,name=reqNick" json:"reqNick"`
	ReqCountry                        uint32   `protobuf:"varint,20003,opt,name=reqCountry" json:"reqCountry"`
	ReqProvince                       int32    `protobuf:"varint,20004,opt,name=reqProvince" json:"reqProvince"`
	ReqGender                         int32    `protobuf:"varint,20009,opt,name=reqGender" json:"reqGender"`
	ReqAllow                          int32    `protobuf:"varint,20014,opt,name=reqAllow" json:"reqAllow"`
	ReqFaceId                         int32    `protobuf:"varint,20015,opt,name=reqFaceId" json:"reqFaceId"`
	ReqCity                           int32    `protobuf:"varint,20020,opt,name=reqCity" json:"reqCity"`
	ReqConstellation                  int32    `protobuf:"varint,20022,opt,name=reqConstellation" json:"reqConstellation"`
	ReqCommonPlace1                   int32    `protobuf:"varint,20027,opt,name=reqCommonPlace1" json:"reqCommonPlace1"`
	ReqMss3Bitmapextra                int32    `protobuf:"varint,20030,opt,name=reqMss3Bitmapextra" json:"reqMss3Bitmapextra"`
	ReqBirthday                       int32    `protobuf:"varint,20031,opt,name=reqBirthday" json:"reqBirthday"`
	ReqCityId                         int32    `protobuf:"varint,20032,opt,name=reqCityId" json:"reqCityId"`
	ReqLang1                          int32    `protobuf:"varint,20033,opt,name=reqLang1" json:"reqLang1"`
	ReqLang2                          int32    `protobuf:"varint,20034,opt,name=reqLang2" json:"reqLang2"`
	ReqLang3                          int32    `protobuf:"varint,20035,opt,name=reqLang3" json:"reqLang3"`
	ReqAge                            int32    `protobuf:"varint,20037,opt,name=reqAge" json:"reqAge"`
	ReqCityZoneId                     int32    `protobuf:"varint,20041,opt,name=reqCityZoneId" json:"reqCityZoneId"`
	ReqOin                            int32    `protobuf:"varint,20056,opt,name=reqOin" json:"reqOin"`
	ReqBubbleId                       int32    `protobuf:"varint,20059,opt,name=reqBubbleId" json:"reqBubbleId"`
	ReqMss2Identity                   int32    `protobuf:"varint,21001,opt,name=reqMss2Identity" json:"reqMss2Identity"`
	ReqMss1Service                    int32    `protobuf:"varint,21002,opt,name=reqMss1Service" json:"reqMss1Service"`
	ReqLflag                          int32    `protobuf:"varint,21003,opt,name=reqLflag" json:"reqLflag"`
	ReqExtFlag                        int32    `protobuf:"varint,21004,opt,name=reqExtFlag" json:"reqExtFlag"`
	ReqBasicSvrFlag                   int32    `protobuf:"varint,21006,opt,name=reqBasicSvrFlag" json:"reqBasicSvrFlag"`
	ReqBasicCliFlag                   int32    `protobuf:"varint,21007,opt,name=reqBasicCliFlag" json:"reqBasicCliFlag"`
	ReqFullBirthday                   int32    `protobuf:"varint,26004,opt,name=reqFullBirthday" json:"reqFullBirthday"`
	ReqFullAge                        int32    `protobuf:"varint,26005,opt,name=reqFullAge" json:"reqFullAge"`
	ReqSimpleUpdateTime               int32    `protobuf:"varint,26010,opt,name=reqSimpleUpdateTime" json:"reqSimpleUpdateTime"`
	ReqMssUpdateTime                  int32    `protobuf:"varint,26011,opt,name=reqMssUpdateTime" json:"reqMssUpdateTime"`
	ReqPstnMultiCallTime              int32    `protobuf:"varint,26012,opt,name=reqPstnMultiCallTime" json:"reqPstnMultiCallTime"`
	ReqPstnMultiLastGuideRechargeTime int32    `protobuf:"varint,26013,opt,name=reqPstnMultiLastGuideRechargeTime" json:"reqPstnMultiLastGuideRechargeTime"`
	ReqPstnC2CCallTime                int32    `protobuf:"varint,26014,opt,name=reqPstnC2cCallTime" json:"reqPstnC2cCallTime"`
	ReqPstnC2CLastGuideRechargeTime   int32    `protobuf:"varint,26015,opt,name=reqPstnC2cLastGuideRechargeTime" json:"reqPstnC2cLastGuideRechargeTime"`
	ReqGroupMemCreditFlag             int32    `protobuf:"varint,27022,opt,name=reqGroupMemCreditFlag" json:"reqGroupMemCreditFlag"`
	ReqFaceAddonId                    int32    `protobuf:"varint,27025,opt,name=reqFaceAddonId" json:"reqFaceAddonId"`
	ReqMusicGene                      int32    `protobuf:"varint,27026,opt,name=reqMusicGene" json:"reqMusicGene"`
	ReqStrangerNick                   int32    `protobuf:"varint,27034,opt,name=reqStrangerNick" json:"reqStrangerNick"`
	ReqStrangerDeclare                int32    `protobuf:"varint,27035,opt,name=reqStrangerDeclare" json:"reqStrangerDeclare"`
	ReqLoveStatus                     int32    `protobuf:"varint,27036,opt,name=reqLoveStatus" json:"reqLoveStatus"`
	ReqProfession                     int32    `protobuf:"varint,27037,opt,name=reqProfession" json:"reqProfession"`
	ReqVasColorringFlag               int32    `protobuf:"varint,27041,opt,name=reqVasColorringFlag" json:"reqVasColorringFlag"`
	ReqCharm                          int32    `protobuf:"varint,27052,opt,name=reqCharm" json:"reqCharm"`
	ReqApolloTimestamp                int32    `protobuf:"varint,27059,opt,name=reqApolloTimestamp" json:"reqApolloTimestamp"`
	ReqVasFontIdFlag                  int32    `protobuf:"varint,27201,opt,name=reqVasFontIdFlag" json:"reqVasFontIdFlag"`
	ReqGlobalGroupLevel               int32    `protobuf:"varint,27208,opt,name=reqGlobalGroupLevel" json:"reqGlobalGroupLevel"`
	ReqInvite2GroupAutoAgreeFlag      int32    `protobuf:"varint,40346,opt,name=reqInvite2groupAutoAgreeFlag" json:"reqInvite2groupAutoAgreeFlag"`
	ReqSubaccountDisplayThirdQqFlag   int32    `protobuf:"varint,40348,opt,name=reqSubaccountDisplayThirdQqFlag" json:"reqSubaccountDisplayThirdQqFlag"`
	NotifyPartakeLikeRankingListFlag  int32    `protobuf:"varint,40350,opt,name=notifyPartakeLikeRankingListFlag" json:"notifyPartakeLikeRankingListFlag"`
	ReqLightalkSwitch                 int32    `protobuf:"varint,40506,opt,name=reqLightalkSwitch" json:"reqLightalkSwitch"`
	ReqMusicRingVisible               int32    `protobuf:"varint,40507,opt,name=reqMusicRingVisible" json:"reqMusicRingVisible"`
	ReqMusicRingAutoplay              int32    `protobuf:"varint,40508,opt,name=reqMusicRingAutoplay" json:"reqMusicRingAutoplay"`
	ReqMusicRingRedpoint              int32    `protobuf:"varint,40509,opt,name=reqMusicRingRedpoint" json:"reqMusicRingRedpoint"`
	TorchDisableFlag                  int32    `protobuf:"varint,40525,opt,name=torchDisableFlag" json:"torchDisableFlag"`
	ReqVasMagicfontFlag               int32    `protobuf:"varint,40530,opt,name=reqVasMagicfontFlag" json:"reqVasMagicfontFlag"`
	ReqVipFlag                        int32    `protobuf:"varint,41756,opt,name=reqVipFlag" json:"reqVipFlag"`
	ReqAuthFlag                       int32    `protobuf:"varint,41783,opt,name=reqAuthFlag" json:"reqAuthFlag"`
	ReqForbidFlag                     int32    `protobuf:"varint,41784,opt,name=reqForbidFlag" json:"reqForbidFlag"`
	ReqGodForbid                      int32    `protobuf:"varint,41804,opt,name=reqGodForbid" json:"reqGodForbid"`
	ReqGodFlag                        int32    `protobuf:"varint,41805,opt,name=reqGodFlag" json:"reqGodFlag"`
	ReqCharmLevel                     int32    `protobuf:"varint,41950,opt,name=reqCharmLevel" json:"reqCharmLevel"`
	ReqCharmShown                     int32    `protobuf:"varint,41973,opt,name=reqCharmShown" json:"reqCharmShown"`
	ReqFreshnewsNotifyFlag            int32    `protobuf:"varint,41993,opt,name=reqFreshnewsNotifyFlag" json:"reqFreshnewsNotifyFlag"`
	ReqApolloVipLevel                 int32    `protobuf:"varint,41999,opt,name=reqApolloVipLevel" json:"reqApolloVipLevel"`
	ReqApolloVipFlag                  int32    `protobuf:"varint,42003,opt,name=reqApolloVipFlag" json:"reqApolloVipFlag"`
	ReqPstnC2CVip                     int32    `protobuf:"varint,42005,opt,name=reqPstnC2cVip" json:"reqPstnC2cVip"`
	ReqPstnMultiVip                   int32    `protobuf:"varint,42006,opt,name=reqPstnMultiVip" json:"reqPstnMultiVip"`
	ReqPstnEverC2CVip                 int32    `protobuf:"varint,42007,opt,name=reqPstnEverC2cVip" json:"reqPstnEverC2cVip"`
	ReqPstnEverMultiVip               int32    `protobuf:"varint,42008,opt,name=reqPstnEverMultiVip" json:"reqPstnEverMultiVip"`
	ReqPstnMultiTryFlag               int32    `protobuf:"varint,42011,opt,name=reqPstnMultiTryFlag" json:"reqPstnMultiTryFlag"`
	ReqPstnC2CTryFlag                 int32    `protobuf:"varint,42012,opt,name=reqPstnC2cTryFlag" json:"reqPstnC2cTryFlag"`
	ReqSubscribeNearbyassistantSwitch int32    `protobuf:"varint,42024,opt,name=reqSubscribeNearbyassistantSwitch" json:"reqSubscribeNearbyassistantSwitch"`
	ReqTorchbearerFlag                int32    `protobuf:"varint,42051,opt,name=reqTorchbearerFlag" json:"reqTorchbearerFlag"`
	PreloadDisableFlag                int32    `protobuf:"varint,42073,opt,name=preloadDisableFlag" json:"preloadDisableFlag"`
	ReqMedalwallFlag                  int32    `protobuf:"varint,42075,opt,name=reqMedalwallFlag" json:"reqMedalwallFlag"`
	NotifyOnLikeRankingListFlag       int32    `protobuf:"varint,42092,opt,name=notifyOnLikeRankingListFlag" json:"notifyOnLikeRankingListFlag"`
	ReqApolloStatus                   int32    `protobuf:"varint,42980,opt,name=reqApolloStatus" json:"reqApolloStatus"`
}

func (m *D5EBReqBody) Reset()         { *m = D5EBReqBody{} }
func (m *D5EBReqBody) String() string { return proto.CompactTextString(m) }
func (*D5EBReqBody) ProtoMessage()    {}
func (*D5EBReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_c60319a7da2d31d5, []int{0}
}
func (m *D5EBReqBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *D5EBReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_D5EBReqBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *D5EBReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_D5EBReqBody.Merge(m, src)
}
func (m *D5EBReqBody) XXX_Size() int {
	return m.Size()
}
func (m *D5EBReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_D5EBReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_D5EBReqBody proto.InternalMessageInfo

func (m *D5EBReqBody) GetUins() []uint64 {
	if m != nil {
		return m.Uins
	}
	return nil
}

func (m *D5EBReqBody) GetMaxPackageSize() uint32 {
	if m != nil {
		return m.MaxPackageSize
	}
	return 0
}

func (m *D5EBReqBody) GetOpenid() [][]byte {
	if m != nil {
		return m.Openid
	}
	return nil
}

func (m *D5EBReqBody) GetAppid() uint32 {
	if m != nil {
		return m.Appid
	}
	return 0
}

func (m *D5EBReqBody) GetReqNick() uint32 {
	if m != nil {
		return m.ReqNick
	}
	return 0
}

func (m *D5EBReqBody) GetReqCountry() uint32 {
	if m != nil {
		return m.ReqCountry
	}
	return 0
}

func (m *D5EBReqBody) GetReqProvince() int32 {
	if m != nil {
		return m.ReqProvince
	}
	return 0
}

func (m *D5EBReqBody) GetReqGender() int32 {
	if m != nil {
		return m.ReqGender
	}
	return 0
}

func (m *D5EBReqBody) GetReqAllow() int32 {
	if m != nil {
		return m.ReqAllow
	}
	return 0
}

func (m *D5EBReqBody) GetReqFaceId() int32 {
	if m != nil {
		return m.ReqFaceId
	}
	return 0
}

func (m *D5EBReqBody) GetReqCity() int32 {
	if m != nil {
		return m.ReqCity
	}
	return 0
}

func (m *D5EBReqBody) GetReqConstellation() int32 {
	if m != nil {
		return m.ReqConstellation
	}
	return 0
}

func (m *D5EBReqBody) GetReqCommonPlace1() int32 {
	if m != nil {
		return m.ReqCommonPlace1
	}
	return 0
}

func (m *D5EBReqBody) GetReqMss3Bitmapextra() int32 {
	if m != nil {
		return m.ReqMss3Bitmapextra
	}
	return 0
}

func (m *D5EBReqBody) GetReqBirthday() int32 {
	if m != nil {
		return m.ReqBirthday
	}
	return 0
}

func (m *D5EBReqBody) GetReqCityId() int32 {
	if m != nil {
		return m.ReqCityId
	}
	return 0
}

func (m *D5EBReqBody) GetReqLang1() int32 {
	if m != nil {
		return m.ReqLang1
	}
	return 0
}

func (m *D5EBReqBody) GetReqLang2() int32 {
	if m != nil {
		return m.ReqLang2
	}
	return 0
}

func (m *D5EBReqBody) GetReqLang3() int32 {
	if m != nil {
		return m.ReqLang3
	}
	return 0
}

func (m *D5EBReqBody) GetReqAge() int32 {
	if m != nil {
		return m.ReqAge
	}
	return 0
}

func (m *D5EBReqBody) GetReqCityZoneId() int32 {
	if m != nil {
		return m.ReqCityZoneId
	}
	return 0
}

func (m *D5EBReqBody) GetReqOin() int32 {
	if m != nil {
		return m.ReqOin
	}
	return 0
}

func (m *D5EBReqBody) GetReqBubbleId() int32 {
	if m != nil {
		return m.ReqBubbleId
	}
	return 0
}

func (m *D5EBReqBody) GetReqMss2Identity() int32 {
	if m != nil {
		return m.ReqMss2Identity
	}
	return 0
}

func (m *D5EBReqBody) GetReqMss1Service() int32 {
	if m != nil {
		return m.ReqMss1Service
	}
	return 0
}

func (m *D5EBReqBody) GetReqLflag() int32 {
	if m != nil {
		return m.ReqLflag
	}
	return 0
}

func (m *D5EBReqBody) GetReqExtFlag() int32 {
	if m != nil {
		return m.ReqExtFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqBasicSvrFlag() int32 {
	if m != nil {
		return m.ReqBasicSvrFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqBasicCliFlag() int32 {
	if m != nil {
		return m.ReqBasicCliFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqFullBirthday() int32 {
	if m != nil {
		return m.ReqFullBirthday
	}
	return 0
}

func (m *D5EBReqBody) GetReqFullAge() int32 {
	if m != nil {
		return m.ReqFullAge
	}
	return 0
}

func (m *D5EBReqBody) GetReqSimpleUpdateTime() int32 {
	if m != nil {
		return m.ReqSimpleUpdateTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqMssUpdateTime() int32 {
	if m != nil {
		return m.ReqMssUpdateTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnMultiCallTime() int32 {
	if m != nil {
		return m.ReqPstnMultiCallTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnMultiLastGuideRechargeTime() int32 {
	if m != nil {
		return m.ReqPstnMultiLastGuideRechargeTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnC2CCallTime() int32 {
	if m != nil {
		return m.ReqPstnC2CCallTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnC2CLastGuideRechargeTime() int32 {
	if m != nil {
		return m.ReqPstnC2CLastGuideRechargeTime
	}
	return 0
}

func (m *D5EBReqBody) GetReqGroupMemCreditFlag() int32 {
	if m != nil {
		return m.ReqGroupMemCreditFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqFaceAddonId() int32 {
	if m != nil {
		return m.ReqFaceAddonId
	}
	return 0
}

func (m *D5EBReqBody) GetReqMusicGene() int32 {
	if m != nil {
		return m.ReqMusicGene
	}
	return 0
}

func (m *D5EBReqBody) GetReqStrangerNick() int32 {
	if m != nil {
		return m.ReqStrangerNick
	}
	return 0
}

func (m *D5EBReqBody) GetReqStrangerDeclare() int32 {
	if m != nil {
		return m.ReqStrangerDeclare
	}
	return 0
}

func (m *D5EBReqBody) GetReqLoveStatus() int32 {
	if m != nil {
		return m.ReqLoveStatus
	}
	return 0
}

func (m *D5EBReqBody) GetReqProfession() int32 {
	if m != nil {
		return m.ReqProfession
	}
	return 0
}

func (m *D5EBReqBody) GetReqVasColorringFlag() int32 {
	if m != nil {
		return m.ReqVasColorringFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqCharm() int32 {
	if m != nil {
		return m.ReqCharm
	}
	return 0
}

func (m *D5EBReqBody) GetReqApolloTimestamp() int32 {
	if m != nil {
		return m.ReqApolloTimestamp
	}
	return 0
}

func (m *D5EBReqBody) GetReqVasFontIdFlag() int32 {
	if m != nil {
		return m.ReqVasFontIdFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqGlobalGroupLevel() int32 {
	if m != nil {
		return m.ReqGlobalGroupLevel
	}
	return 0
}

func (m *D5EBReqBody) GetReqInvite2GroupAutoAgreeFlag() int32 {
	if m != nil {
		return m.ReqInvite2GroupAutoAgreeFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqSubaccountDisplayThirdQqFlag() int32 {
	if m != nil {
		return m.ReqSubaccountDisplayThirdQqFlag
	}
	return 0
}

func (m *D5EBReqBody) GetNotifyPartakeLikeRankingListFlag() int32 {
	if m != nil {
		return m.NotifyPartakeLikeRankingListFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqLightalkSwitch() int32 {
	if m != nil {
		return m.ReqLightalkSwitch
	}
	return 0
}

func (m *D5EBReqBody) GetReqMusicRingVisible() int32 {
	if m != nil {
		return m.ReqMusicRingVisible
	}
	return 0
}

func (m *D5EBReqBody) GetReqMusicRingAutoplay() int32 {
	if m != nil {
		return m.ReqMusicRingAutoplay
	}
	return 0
}

func (m *D5EBReqBody) GetReqMusicRingRedpoint() int32 {
	if m != nil {
		return m.ReqMusicRingRedpoint
	}
	return 0
}

func (m *D5EBReqBody) GetTorchDisableFlag() int32 {
	if m != nil {
		return m.TorchDisableFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqVasMagicfontFlag() int32 {
	if m != nil {
		return m.ReqVasMagicfontFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqVipFlag() int32 {
	if m != nil {
		return m.ReqVipFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqAuthFlag() int32 {
	if m != nil {
		return m.ReqAuthFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqForbidFlag() int32 {
	if m != nil {
		return m.ReqForbidFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqGodForbid() int32 {
	if m != nil {
		return m.ReqGodForbid
	}
	return 0
}

func (m *D5EBReqBody) GetReqGodFlag() int32 {
	if m != nil {
		return m.ReqGodFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqCharmLevel() int32 {
	if m != nil {
		return m.ReqCharmLevel
	}
	return 0
}

func (m *D5EBReqBody) GetReqCharmShown() int32 {
	if m != nil {
		return m.ReqCharmShown
	}
	return 0
}

func (m *D5EBReqBody) GetReqFreshnewsNotifyFlag() int32 {
	if m != nil {
		return m.ReqFreshnewsNotifyFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqApolloVipLevel() int32 {
	if m != nil {
		return m.ReqApolloVipLevel
	}
	return 0
}

func (m *D5EBReqBody) GetReqApolloVipFlag() int32 {
	if m != nil {
		return m.ReqApolloVipFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnC2CVip() int32 {
	if m != nil {
		return m.ReqPstnC2CVip
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnMultiVip() int32 {
	if m != nil {
		return m.ReqPstnMultiVip
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnEverC2CVip() int32 {
	if m != nil {
		return m.ReqPstnEverC2CVip
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnEverMultiVip() int32 {
	if m != nil {
		return m.ReqPstnEverMultiVip
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnMultiTryFlag() int32 {
	if m != nil {
		return m.ReqPstnMultiTryFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqPstnC2CTryFlag() int32 {
	if m != nil {
		return m.ReqPstnC2CTryFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqSubscribeNearbyassistantSwitch() int32 {
	if m != nil {
		return m.ReqSubscribeNearbyassistantSwitch
	}
	return 0
}

func (m *D5EBReqBody) GetReqTorchbearerFlag() int32 {
	if m != nil {
		return m.ReqTorchbearerFlag
	}
	return 0
}

func (m *D5EBReqBody) GetPreloadDisableFlag() int32 {
	if m != nil {
		return m.PreloadDisableFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqMedalwallFlag() int32 {
	if m != nil {
		return m.ReqMedalwallFlag
	}
	return 0
}

func (m *D5EBReqBody) GetNotifyOnLikeRankingListFlag() int32 {
	if m != nil {
		return m.NotifyOnLikeRankingListFlag
	}
	return 0
}

func (m *D5EBReqBody) GetReqApolloStatus() int32 {
	if m != nil {
		return m.ReqApolloStatus
	}
	return 0
}

type D5EBRspBody struct {
	UinData        []*UdcUinData `protobuf:"bytes,11,rep,name=uinData" json:"uinData,omitempty"`
	UnfinishedUins []int64       `protobuf:"varint,12,rep,name=unfinishedUins" json:"unfinishedUins,omitempty"`
}

func (m *D5EBRspBody) Reset()         { *m = D5EBRspBody{} }
func (m *D5EBRspBody) String() string { return proto.CompactTextString(m) }
func (*D5EBRspBody) ProtoMessage()    {}
func (*D5EBRspBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_c60319a7da2d31d5, []int{1}
}
func (m *D5EBRspBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *D5EBRspBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_D5EBRspBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *D5EBRspBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_D5EBRspBody.Merge(m, src)
}
func (m *D5EBRspBody) XXX_Size() int {
	return m.Size()
}
func (m *D5EBRspBody) XXX_DiscardUnknown() {
	xxx_messageInfo_D5EBRspBody.DiscardUnknown(m)
}

var xxx_messageInfo_D5EBRspBody proto.InternalMessageInfo

func (m *D5EBRspBody) GetUinData() []*UdcUinData {
	if m != nil {
		return m.UinData
	}
	return nil
}

func (m *D5EBRspBody) GetUnfinishedUins() []int64 {
	if m != nil {
		return m.UnfinishedUins
	}
	return nil
}

type UdcUinData struct {
	Uin                              int64  `protobuf:"varint,1,opt,name=uin" json:"uin"`
	Openid                           []byte `protobuf:"bytes,4,opt,name=openid" json:"openid"`
	Nick                             []byte `protobuf:"bytes,20002,opt,name=nick" json:"nick"`
	Country                          []byte `protobuf:"bytes,20003,opt,name=country" json:"country"`
	Province                         []byte `protobuf:"bytes,20004,opt,name=province" json:"province"`
	Gender                           int32  `protobuf:"varint,20009,opt,name=gender" json:"gender"`
	Allow                            int32  `protobuf:"varint,20014,opt,name=allow" json:"allow"`
	FaceId                           int32  `protobuf:"varint,20015,opt,name=faceId" json:"faceId"`
	City                             []byte `protobuf:"bytes,20020,opt,name=city" json:"city"`
	Constellation                    int32  `protobuf:"varint,20022,opt,name=constellation" json:"constellation"`
	CommonPlace1                     int32  `protobuf:"varint,20027,opt,name=commonPlace1" json:"commonPlace1"`
	Mss3Bitmapextra                  []byte `protobuf:"bytes,20030,opt,name=mss3Bitmapextra" json:"mss3Bitmapextra"`
	Birthday                         []byte `protobuf:"bytes,20031,opt,name=birthday" json:"birthday"`
	CityId                           []byte `protobuf:"bytes,20032,opt,name=cityId" json:"cityId"`
	Lang1                            int32  `protobuf:"varint,20033,opt,name=lang1" json:"lang1"`
	Lang2                            int32  `protobuf:"varint,20034,opt,name=lang2" json:"lang2"`
	Lang3                            int32  `protobuf:"varint,20035,opt,name=lang3" json:"lang3"`
	Age                              int32  `protobuf:"varint,20037,opt,name=age" json:"age"`
	CityZoneId                       int32  `protobuf:"varint,20041,opt,name=cityZoneId" json:"cityZoneId"`
	Oin                              int32  `protobuf:"varint,20056,opt,name=oin" json:"oin"`
	BubbleId                         int32  `protobuf:"varint,20059,opt,name=bubbleId" json:"bubbleId"`
	Mss2Identity                     []byte `protobuf:"bytes,21001,opt,name=mss2Identity" json:"mss2Identity"`
	Mss1Service                      []byte `protobuf:"bytes,21002,opt,name=mss1Service" json:"mss1Service"`
	Lflag                            int32  `protobuf:"varint,21003,opt,name=lflag" json:"lflag"`
	ExtFlag                          int32  `protobuf:"varint,21004,opt,name=extFlag" json:"extFlag"`
	BasicSvrFlag                     []byte `protobuf:"bytes,21006,opt,name=basicSvrFlag" json:"basicSvrFlag"`
	BasicCliFlag                     []byte `protobuf:"bytes,21007,opt,name=basicCliFlag" json:"basicCliFlag"`
	FullBirthday                     []byte `protobuf:"bytes,26004,opt,name=fullBirthday" json:"fullBirthday"`
	FullAge                          []byte `protobuf:"bytes,26005,opt,name=fullAge" json:"fullAge"`
	SimpleUpdateTime                 int32  `protobuf:"varint,26010,opt,name=simpleUpdateTime" json:"simpleUpdateTime"`
	MssUpdateTime                    int32  `protobuf:"varint,26011,opt,name=mssUpdateTime" json:"mssUpdateTime"`
	PstnMultiCallTime                int32  `protobuf:"varint,26012,opt,name=pstnMultiCallTime" json:"pstnMultiCallTime"`
	PstnMultiLastGuideRechargeTime   int32  `protobuf:"varint,26013,opt,name=pstnMultiLastGuideRechargeTime" json:"pstnMultiLastGuideRechargeTime"`
	PstnC2CCallTime                  int32  `protobuf:"varint,26014,opt,name=pstnC2cCallTime" json:"pstnC2cCallTime"`
	PstnC2CLastGuideRechargeTime     int32  `protobuf:"varint,26015,opt,name=pstnC2cLastGuideRechargeTime" json:"pstnC2cLastGuideRechargeTime"`
	GroupMemCreditFlag               int32  `protobuf:"varint,27022,opt,name=groupMemCreditFlag" json:"groupMemCreditFlag"`
	FaceAddonId                      int64  `protobuf:"varint,27025,opt,name=faceAddonId" json:"faceAddonId"`
	MusicGene                        []byte `protobuf:"bytes,27026,opt,name=musicGene" json:"musicGene"`
	StrangerNick                     []byte `protobuf:"bytes,27034,opt,name=strangerNick" json:"strangerNick"`
	StrangerDeclare                  []byte `protobuf:"bytes,27035,opt,name=strangerDeclare" json:"strangerDeclare"`
	LoveStatus                       int32  `protobuf:"varint,27036,opt,name=loveStatus" json:"loveStatus"`
	Profession                       int32  `protobuf:"varint,27037,opt,name=profession" json:"profession"`
	VasColorringId                   int32  `protobuf:"varint,27041,opt,name=vasColorringId" json:"vasColorringId"`
	Charm                            int32  `protobuf:"varint,27052,opt,name=charm" json:"charm"`
	ApolloTimestamp                  int32  `protobuf:"varint,27059,opt,name=apolloTimestamp" json:"apolloTimestamp"`
	VasFontId                        int32  `protobuf:"varint,27201,opt,name=vasFontId" json:"vasFontId"`
	GlobalGroupLevel                 int32  `protobuf:"varint,27208,opt,name=globalGroupLevel" json:"globalGroupLevel"`
	ReqInvite2GroupAutoAgreeFlag     int32  `protobuf:"varint,40346,opt,name=reqInvite2groupAutoAgreeFlag" json:"reqInvite2groupAutoAgreeFlag"`
	SubaccountDisplayThirdQqFlag     int32  `protobuf:"varint,40348,opt,name=subaccountDisplayThirdQqFlag" json:"subaccountDisplayThirdQqFlag"`
	NotifyPartakeLikeRankingListFlag int32  `protobuf:"varint,40350,opt,name=notifyPartakeLikeRankingListFlag" json:"notifyPartakeLikeRankingListFlag"`
	LightalkSwitch                   int32  `protobuf:"varint,40506,opt,name=lightalkSwitch" json:"lightalkSwitch"`
	MusicRingVisible                 int32  `protobuf:"varint,40507,opt,name=musicRingVisible" json:"musicRingVisible"`
	MusicRingAutoplay                int32  `protobuf:"varint,40508,opt,name=musicRingAutoplay" json:"musicRingAutoplay"`
	MusicRingRedpoint                int32  `protobuf:"varint,40509,opt,name=musicRingRedpoint" json:"musicRingRedpoint"`
	TorchDisableFlag                 int32  `protobuf:"varint,40525,opt,name=torchDisableFlag" json:"torchDisableFlag"`
	VasMagicfontFlag                 int32  `protobuf:"varint,40530,opt,name=vasMagicfontFlag" json:"vasMagicfontFlag"`
	VipFlag                          int32  `protobuf:"varint,41756,opt,name=vipFlag" json:"vipFlag"`
	AuthFlag                         int32  `protobuf:"varint,41783,opt,name=authFlag" json:"authFlag"`
	ForbidFlag                       int32  `protobuf:"varint,41784,opt,name=forbidFlag" json:"forbidFlag"`
	GodForbid                        int32  `protobuf:"varint,41804,opt,name=godForbid" json:"godForbid"`
	GodFlag                          int32  `protobuf:"varint,41805,opt,name=godFlag" json:"godFlag"`
	CharmLevel                       int32  `protobuf:"varint,41950,opt,name=charmLevel" json:"charmLevel"`
	CharmShown                       int32  `protobuf:"varint,41973,opt,name=charmShown" json:"charmShown"`
	FreshnewsNotifyFlag              int32  `protobuf:"varint,41993,opt,name=freshnewsNotifyFlag" json:"freshnewsNotifyFlag"`
	ApolloVipLevel                   int32  `protobuf:"varint,41999,opt,name=apolloVipLevel" json:"apolloVipLevel"`
	ApolloVipFlag                    int32  `protobuf:"varint,42003,opt,name=apolloVipFlag" json:"apolloVipFlag"`
	PstnC2CVip                       int32  `protobuf:"varint,42005,opt,name=pstnC2cVip" json:"pstnC2cVip"`
	PstnMultiVip                     int32  `protobuf:"varint,42006,opt,name=pstnMultiVip" json:"pstnMultiVip"`
	PstnEverC2CVip                   int32  `protobuf:"varint,42007,opt,name=pstnEverC2cVip" json:"pstnEverC2cVip"`
	PstnEverMultiVip                 int32  `protobuf:"varint,42008,opt,name=pstnEverMultiVip" json:"pstnEverMultiVip"`
	PstnMultiTryFlag                 int32  `protobuf:"varint,42011,opt,name=pstnMultiTryFlag" json:"pstnMultiTryFlag"`
	PstnC2CTryFlag                   int32  `protobuf:"varint,42012,opt,name=pstnC2cTryFlag" json:"pstnC2cTryFlag"`
	SubscribeNearbyassistantSwitch   int32  `protobuf:"varint,42024,opt,name=subscribeNearbyassistantSwitch" json:"subscribeNearbyassistantSwitch"`
	TorchbearerFlag                  int32  `protobuf:"varint,42051,opt,name=torchbearerFlag" json:"torchbearerFlag"`
	PreloadDisableFlag               int32  `protobuf:"varint,42073,opt,name=preloadDisableFlag" json:"preloadDisableFlag"`
	ReqMedalwallFlag                 int32  `protobuf:"varint,42075,opt,name=reqMedalwallFlag" json:"reqMedalwallFlag"`
	NotifyOnLikeRankingListFlag      int32  `protobuf:"varint,42092,opt,name=notifyOnLikeRankingListFlag" json:"notifyOnLikeRankingListFlag"`
	ApolloStatus                     int32  `protobuf:"varint,42980,opt,name=apolloStatus" json:"apolloStatus"`
}

func (m *UdcUinData) Reset()         { *m = UdcUinData{} }
func (m *UdcUinData) String() string { return proto.CompactTextString(m) }
func (*UdcUinData) ProtoMessage()    {}
func (*UdcUinData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c60319a7da2d31d5, []int{2}
}
func (m *UdcUinData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UdcUinData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UdcUinData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UdcUinData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdcUinData.Merge(m, src)
}
func (m *UdcUinData) XXX_Size() int {
	return m.Size()
}
func (m *UdcUinData) XXX_DiscardUnknown() {
	xxx_messageInfo_UdcUinData.DiscardUnknown(m)
}

var xxx_messageInfo_UdcUinData proto.InternalMessageInfo

func (m *UdcUinData) GetUin() int64 {
	if m != nil {
		return m.Uin
	}
	return 0
}

func (m *UdcUinData) GetOpenid() []byte {
	if m != nil {
		return m.Openid
	}
	return nil
}

func (m *UdcUinData) GetNick() []byte {
	if m != nil {
		return m.Nick
	}
	return nil
}

func (m *UdcUinData) GetCountry() []byte {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *UdcUinData) GetProvince() []byte {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *UdcUinData) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *UdcUinData) GetAllow() int32 {
	if m != nil {
		return m.Allow
	}
	return 0
}

func (m *UdcUinData) GetFaceId() int32 {
	if m != nil {
		return m.FaceId
	}
	return 0
}

func (m *UdcUinData) GetCity() []byte {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *UdcUinData) GetConstellation() int32 {
	if m != nil {
		return m.Constellation
	}
	return 0
}

func (m *UdcUinData) GetCommonPlace1() int32 {
	if m != nil {
		return m.CommonPlace1
	}
	return 0
}

func (m *UdcUinData) GetMss3Bitmapextra() []byte {
	if m != nil {
		return m.Mss3Bitmapextra
	}
	return nil
}

func (m *UdcUinData) GetBirthday() []byte {
	if m != nil {
		return m.Birthday
	}
	return nil
}

func (m *UdcUinData) GetCityId() []byte {
	if m != nil {
		return m.CityId
	}
	return nil
}

func (m *UdcUinData) GetLang1() int32 {
	if m != nil {
		return m.Lang1
	}
	return 0
}

func (m *UdcUinData) GetLang2() int32 {
	if m != nil {
		return m.Lang2
	}
	return 0
}

func (m *UdcUinData) GetLang3() int32 {
	if m != nil {
		return m.Lang3
	}
	return 0
}

func (m *UdcUinData) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *UdcUinData) GetCityZoneId() int32 {
	if m != nil {
		return m.CityZoneId
	}
	return 0
}

func (m *UdcUinData) GetOin() int32 {
	if m != nil {
		return m.Oin
	}
	return 0
}

func (m *UdcUinData) GetBubbleId() int32 {
	if m != nil {
		return m.BubbleId
	}
	return 0
}

func (m *UdcUinData) GetMss2Identity() []byte {
	if m != nil {
		return m.Mss2Identity
	}
	return nil
}

func (m *UdcUinData) GetMss1Service() []byte {
	if m != nil {
		return m.Mss1Service
	}
	return nil
}

func (m *UdcUinData) GetLflag() int32 {
	if m != nil {
		return m.Lflag
	}
	return 0
}

func (m *UdcUinData) GetExtFlag() int32 {
	if m != nil {
		return m.ExtFlag
	}
	return 0
}

func (m *UdcUinData) GetBasicSvrFlag() []byte {
	if m != nil {
		return m.BasicSvrFlag
	}
	return nil
}

func (m *UdcUinData) GetBasicCliFlag() []byte {
	if m != nil {
		return m.BasicCliFlag
	}
	return nil
}

func (m *UdcUinData) GetFullBirthday() []byte {
	if m != nil {
		return m.FullBirthday
	}
	return nil
}

func (m *UdcUinData) GetFullAge() []byte {
	if m != nil {
		return m.FullAge
	}
	return nil
}

func (m *UdcUinData) GetSimpleUpdateTime() int32 {
	if m != nil {
		return m.SimpleUpdateTime
	}
	return 0
}

func (m *UdcUinData) GetMssUpdateTime() int32 {
	if m != nil {
		return m.MssUpdateTime
	}
	return 0
}

func (m *UdcUinData) GetPstnMultiCallTime() int32 {
	if m != nil {
		return m.PstnMultiCallTime
	}
	return 0
}

func (m *UdcUinData) GetPstnMultiLastGuideRechargeTime() int32 {
	if m != nil {
		return m.PstnMultiLastGuideRechargeTime
	}
	return 0
}

func (m *UdcUinData) GetPstnC2CCallTime() int32 {
	if m != nil {
		return m.PstnC2CCallTime
	}
	return 0
}

func (m *UdcUinData) GetPstnC2CLastGuideRechargeTime() int32 {
	if m != nil {
		return m.PstnC2CLastGuideRechargeTime
	}
	return 0
}

func (m *UdcUinData) GetGroupMemCreditFlag() int32 {
	if m != nil {
		return m.GroupMemCreditFlag
	}
	return 0
}

func (m *UdcUinData) GetFaceAddonId() int64 {
	if m != nil {
		return m.FaceAddonId
	}
	return 0
}

func (m *UdcUinData) GetMusicGene() []byte {
	if m != nil {
		return m.MusicGene
	}
	return nil
}

func (m *UdcUinData) GetStrangerNick() []byte {
	if m != nil {
		return m.StrangerNick
	}
	return nil
}

func (m *UdcUinData) GetStrangerDeclare() []byte {
	if m != nil {
		return m.StrangerDeclare
	}
	return nil
}

func (m *UdcUinData) GetLoveStatus() int32 {
	if m != nil {
		return m.LoveStatus
	}
	return 0
}

func (m *UdcUinData) GetProfession() int32 {
	if m != nil {
		return m.Profession
	}
	return 0
}

func (m *UdcUinData) GetVasColorringId() int32 {
	if m != nil {
		return m.VasColorringId
	}
	return 0
}

func (m *UdcUinData) GetCharm() int32 {
	if m != nil {
		return m.Charm
	}
	return 0
}

func (m *UdcUinData) GetApolloTimestamp() int32 {
	if m != nil {
		return m.ApolloTimestamp
	}
	return 0
}

func (m *UdcUinData) GetVasFontId() int32 {
	if m != nil {
		return m.VasFontId
	}
	return 0
}

func (m *UdcUinData) GetGlobalGroupLevel() int32 {
	if m != nil {
		return m.GlobalGroupLevel
	}
	return 0
}

func (m *UdcUinData) GetReqInvite2GroupAutoAgreeFlag() int32 {
	if m != nil {
		return m.ReqInvite2GroupAutoAgreeFlag
	}
	return 0
}

func (m *UdcUinData) GetSubaccountDisplayThirdQqFlag() int32 {
	if m != nil {
		return m.SubaccountDisplayThirdQqFlag
	}
	return 0
}

func (m *UdcUinData) GetNotifyPartakeLikeRankingListFlag() int32 {
	if m != nil {
		return m.NotifyPartakeLikeRankingListFlag
	}
	return 0
}

func (m *UdcUinData) GetLightalkSwitch() int32 {
	if m != nil {
		return m.LightalkSwitch
	}
	return 0
}

func (m *UdcUinData) GetMusicRingVisible() int32 {
	if m != nil {
		return m.MusicRingVisible
	}
	return 0
}

func (m *UdcUinData) GetMusicRingAutoplay() int32 {
	if m != nil {
		return m.MusicRingAutoplay
	}
	return 0
}

func (m *UdcUinData) GetMusicRingRedpoint() int32 {
	if m != nil {
		return m.MusicRingRedpoint
	}
	return 0
}

func (m *UdcUinData) GetTorchDisableFlag() int32 {
	if m != nil {
		return m.TorchDisableFlag
	}
	return 0
}

func (m *UdcUinData) GetVasMagicfontFlag() int32 {
	if m != nil {
		return m.VasMagicfontFlag
	}
	return 0
}

func (m *UdcUinData) GetVipFlag() int32 {
	if m != nil {
		return m.VipFlag
	}
	return 0
}

func (m *UdcUinData) GetAuthFlag() int32 {
	if m != nil {
		return m.AuthFlag
	}
	return 0
}

func (m *UdcUinData) GetForbidFlag() int32 {
	if m != nil {
		return m.ForbidFlag
	}
	return 0
}

func (m *UdcUinData) GetGodForbid() int32 {
	if m != nil {
		return m.GodForbid
	}
	return 0
}

func (m *UdcUinData) GetGodFlag() int32 {
	if m != nil {
		return m.GodFlag
	}
	return 0
}

func (m *UdcUinData) GetCharmLevel() int32 {
	if m != nil {
		return m.CharmLevel
	}
	return 0
}

func (m *UdcUinData) GetCharmShown() int32 {
	if m != nil {
		return m.CharmShown
	}
	return 0
}

func (m *UdcUinData) GetFreshnewsNotifyFlag() int32 {
	if m != nil {
		return m.FreshnewsNotifyFlag
	}
	return 0
}

func (m *UdcUinData) GetApolloVipLevel() int32 {
	if m != nil {
		return m.ApolloVipLevel
	}
	return 0
}

func (m *UdcUinData) GetApolloVipFlag() int32 {
	if m != nil {
		return m.ApolloVipFlag
	}
	return 0
}

func (m *UdcUinData) GetPstnC2CVip() int32 {
	if m != nil {
		return m.PstnC2CVip
	}
	return 0
}

func (m *UdcUinData) GetPstnMultiVip() int32 {
	if m != nil {
		return m.PstnMultiVip
	}
	return 0
}

func (m *UdcUinData) GetPstnEverC2CVip() int32 {
	if m != nil {
		return m.PstnEverC2CVip
	}
	return 0
}

func (m *UdcUinData) GetPstnEverMultiVip() int32 {
	if m != nil {
		return m.PstnEverMultiVip
	}
	return 0
}

func (m *UdcUinData) GetPstnMultiTryFlag() int32 {
	if m != nil {
		return m.PstnMultiTryFlag
	}
	return 0
}

func (m *UdcUinData) GetPstnC2CTryFlag() int32 {
	if m != nil {
		return m.PstnC2CTryFlag
	}
	return 0
}

func (m *UdcUinData) GetSubscribeNearbyassistantSwitch() int32 {
	if m != nil {
		return m.SubscribeNearbyassistantSwitch
	}
	return 0
}

func (m *UdcUinData) GetTorchbearerFlag() int32 {
	if m != nil {
		return m.TorchbearerFlag
	}
	return 0
}

func (m *UdcUinData) GetPreloadDisableFlag() int32 {
	if m != nil {
		return m.PreloadDisableFlag
	}
	return 0
}

func (m *UdcUinData) GetReqMedalwallFlag() int32 {
	if m != nil {
		return m.ReqMedalwallFlag
	}
	return 0
}

func (m *UdcUinData) GetNotifyOnLikeRankingListFlag() int32 {
	if m != nil {
		return m.NotifyOnLikeRankingListFlag
	}
	return 0
}

func (m *UdcUinData) GetApolloStatus() int32 {
	if m != nil {
		return m.ApolloStatus
	}
	return 0
}

func init() {
	proto.RegisterType((*D5EBReqBody)(nil), "D5EBReqBody")
	proto.RegisterType((*D5EBRspBody)(nil), "D5EBRspBody")
	proto.RegisterType((*UdcUinData)(nil), "UdcUinData")
}

func init() { proto.RegisterFile("client/pb/oidb/oidb0x5eb.proto", fileDescriptor_c60319a7da2d31d5) }

var fileDescriptor_c60319a7da2d31d5 = []byte{
	// 2106 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xdf, 0x6f, 0x5c, 0x47,
	0x15, 0x8e, 0x6b, 0x27, 0xa5, 0x63, 0x37, 0x84, 0x0b, 0x44, 0x23, 0x1a, 0x39, 0x26, 0x2a, 0x95,
	0x15, 0x21, 0xb7, 0x71, 0x28, 0x42, 0x80, 0x90, 0xec, 0x75, 0x6c, 0x5c, 0xd9, 0x89, 0xd9, 0x75,
	0xfc, 0x50, 0x21, 0x55, 0xb3, 0xf7, 0xce, 0xee, 0x8e, 0x7c, 0x77, 0xee, 0xdd, 0x99, 0xbb, 0x6b,
	0xbb, 0xff, 0x41, 0x01, 0xb5, 0xfc, 0x2a, 0xa0, 0xc4, 0x2d, 0x02, 0xf2, 0x00, 0x12, 0xa2, 0x0f,
	0x20, 0x40, 0x24, 0xfc, 0x28, 0x15, 0x60, 0x14, 0x10, 0x15, 0xee, 0x43, 0x51, 0xa5, 0x0a, 0x25,
	0x3c, 0xf2, 0xca, 0x3b, 0x3a, 0xf7, 0xce, 0xbd, 0x3b, 0x3f, 0xee, 0xde, 0x6d, 0x11, 0x3c, 0xf0,
	0x12, 0xc5, 0xdf, 0xf7, 0x9d, 0xd9, 0x99, 0x33, 0xe7, 0x9c, 0xb9, 0x1f, 0x9a, 0xf5, 0x43, 0x46,
	0x79, 0xf2, 0x78, 0xdc, 0x7c, 0x3c, 0x62, 0x41, 0xf6, 0xcf, 0x13, 0xfb, 0x4f, 0xd2, 0xe6, 0x42,
	0x2c, 0xa2, 0x24, 0xba, 0xf0, 0xca, 0x79, 0x34, 0xbd, 0xf2, 0xe4, 0x95, 0xe5, 0x3a, 0xed, 0x2d,
	0x47, 0xc1, 0x81, 0xe7, 0xa1, 0xa9, 0x3e, 0xe3, 0x12, 0x4f, 0xcc, 0x4d, 0xce, 0x4f, 0xd5, 0xd3,
	0xff, 0x7b, 0x0b, 0xe8, 0x4c, 0x97, 0xec, 0x3f, 0x13, 0x13, 0x7f, 0x97, 0xb4, 0xe9, 0x33, 0x92,
	0x3d, 0x4b, 0xf1, 0xe4, 0xdc, 0xc4, 0xfc, 0xc3, 0xcb, 0x53, 0x47, 0x6f, 0x9f, 0x3f, 0x51, 0x3f,
	0xdd, 0x25, 0xfb, 0x5b, 0x19, 0xd9, 0x60, 0xcf, 0x52, 0xef, 0x2c, 0x3a, 0x15, 0xc5, 0x94, 0xb3,
	0x00, 0x4f, 0xcd, 0x4d, 0xce, 0xcf, 0xd4, 0xd5, 0x5f, 0xde, 0x87, 0xd0, 0x49, 0x12, 0xc7, 0x2c,
	0xc0, 0x27, 0xb5, 0xe0, 0x0c, 0xf2, 0xe6, 0xd0, 0x83, 0x82, 0xf6, 0xae, 0x32, 0x7f, 0x17, 0x7f,
	0xf7, 0x70, 0x42, 0xe3, 0x73, 0xd8, 0x7b, 0x0c, 0x21, 0x41, 0x7b, 0xb5, 0xa8, 0xcf, 0x13, 0x71,
	0x80, 0xbf, 0x67, 0x88, 0x34, 0xc6, 0x9b, 0x47, 0xd3, 0x82, 0xf6, 0xb6, 0x44, 0x34, 0x60, 0xdc,
	0xa7, 0xf8, 0x56, 0x2a, 0x3c, 0xa9, 0x84, 0x3a, 0xe5, 0x3d, 0x8a, 0x1e, 0x12, 0xb4, 0xb7, 0x46,
	0x79, 0x40, 0x05, 0xfe, 0x81, 0xa1, 0x1b, 0x12, 0xde, 0x05, 0xf4, 0x1e, 0x41, 0x7b, 0x4b, 0x61,
	0x18, 0xed, 0xe1, 0x1f, 0x19, 0xa2, 0x02, 0x57, 0x2b, 0xad, 0x12, 0x9f, 0xae, 0x07, 0xf8, 0x15,
	0x67, 0xa5, 0x8c, 0x50, 0x67, 0xac, 0xb1, 0xe4, 0x00, 0xff, 0xc4, 0xd0, 0xe4, 0xb0, 0xb7, 0x88,
	0xce, 0xa4, 0x27, 0xe1, 0x32, 0xa1, 0x61, 0x48, 0x12, 0x16, 0x71, 0xfc, 0x53, 0x43, 0xea, 0xf0,
	0xde, 0x13, 0xe8, 0xbd, 0x29, 0xd6, 0xed, 0x46, 0x7c, 0x2b, 0x24, 0x3e, 0xbd, 0x84, 0x6f, 0x1b,
	0x21, 0x36, 0xed, 0x7d, 0x1c, 0x79, 0x82, 0xf6, 0x36, 0xa5, 0xbc, 0xbc, 0xcc, 0x92, 0x2e, 0x89,
	0xe9, 0x7e, 0x22, 0x08, 0xfe, 0x95, 0x11, 0x54, 0xa2, 0x50, 0x99, 0x5d, 0x66, 0x22, 0xe9, 0x04,
	0xe4, 0x00, 0xff, 0xda, 0xc9, 0x6c, 0x4e, 0xa9, 0x7c, 0xc0, 0x91, 0xd6, 0x03, 0xfc, 0x1b, 0x27,
	0x1f, 0x19, 0xa1, 0x32, 0xbb, 0x41, 0x78, 0xfb, 0x12, 0x7e, 0xd5, 0xc9, 0x6c, 0x8a, 0x6b, 0x9a,
	0x45, 0xfc, 0xdb, 0x52, 0xcd, 0xa2, 0xa6, 0xb9, 0x8c, 0x5f, 0x2b, 0xd5, 0x5c, 0xf6, 0x66, 0xd1,
	0x29, 0xb8, 0xad, 0x36, 0xc5, 0xbf, 0x33, 0x14, 0x0a, 0xf5, 0x3e, 0x8a, 0x1e, 0x56, 0x1b, 0x7b,
	0x3a, 0xe2, 0x70, 0x8b, 0x7f, 0x34, 0x64, 0x26, 0xa9, 0x56, 0xbb, 0xc6, 0x38, 0x7e, 0xd3, 0x59,
	0xed, 0x1a, 0xe3, 0x79, 0xa6, 0xfa, 0xcd, 0x66, 0x08, 0x6b, 0xbd, 0xe5, 0x66, 0x4a, 0x51, 0xea,
	0xf6, 0x36, 0xa5, 0x5c, 0x5c, 0x0f, 0x28, 0x4f, 0xa0, 0x36, 0x9e, 0xbb, 0x65, 0xdf, 0x9e, 0x4e,
	0x7b, 0x0b, 0xe8, 0x74, 0x06, 0x5d, 0x6a, 0x50, 0x31, 0x60, 0x3e, 0xc5, 0x5f, 0x30, 0x02, 0x2c,
	0x36, 0xcf, 0x4e, 0x2b, 0x24, 0x6d, 0xfc, 0xc5, 0x5b, 0x4e, 0x76, 0x00, 0x57, 0xbd, 0x75, 0x65,
	0x3f, 0x59, 0x05, 0xd5, 0x97, 0x0c, 0x95, 0xc6, 0xa8, 0xdd, 0x2e, 0x13, 0xc9, 0xfc, 0xc6, 0x40,
	0xa4, 0xe2, 0xe7, 0x9d, 0xdd, 0xea, 0xb4, 0x1e, 0x51, 0x0b, 0x59, 0x1a, 0xf1, 0x42, 0x79, 0x84,
	0xa2, 0x55, 0xc4, 0x6a, 0x3f, 0x0c, 0x8b, 0x4a, 0xfb, 0xfa, 0x5d, 0x3b, 0x42, 0xa7, 0xd5, 0xee,
	0x01, 0x82, 0xfb, 0x7d, 0xf1, 0xae, 0xbd, 0x7b, 0xc5, 0x78, 0x9f, 0x40, 0xef, 0x17, 0xb4, 0xd7,
	0x60, 0xdd, 0x38, 0xa4, 0xd7, 0xe3, 0x80, 0x24, 0x74, 0x9b, 0x75, 0x29, 0xbe, 0x61, 0x04, 0x94,
	0x49, 0x54, 0x5f, 0x6e, 0x4a, 0xa9, 0x85, 0xdd, 0xbc, 0x6b, 0xf7, 0xa5, 0xc1, 0x7b, 0x9f, 0x44,
	0x1f, 0x80, 0x61, 0x23, 0x13, 0xbe, 0xd9, 0x0f, 0x13, 0x56, 0x23, 0x61, 0x98, 0xc6, 0x1d, 0x1a,
	0x71, 0xa5, 0x1a, 0x6f, 0x1b, 0x7d, 0x58, 0xc7, 0x37, 0x88, 0x4c, 0xd6, 0xfa, 0x2c, 0xa0, 0x75,
	0xea, 0x77, 0x88, 0x68, 0x67, 0x1b, 0x78, 0xc9, 0x58, 0x68, 0x7c, 0x80, 0xea, 0x7b, 0x10, 0xd5,
	0x16, 0xfd, 0x62, 0x3f, 0x2f, 0xdf, 0xb5, 0xfb, 0xde, 0x52, 0x78, 0x5b, 0xe8, 0xfc, 0x10, 0x2d,
	0xdf, 0xcb, 0xb7, 0x8d, 0x45, 0xc6, 0xc9, 0xbd, 0x4f, 0xa3, 0x0f, 0xc2, 0x80, 0x15, 0x51, 0x3f,
	0xde, 0xa4, 0xdd, 0x9a, 0xa0, 0x01, 0xcb, 0x4a, 0xef, 0xf9, 0x63, 0x7d, 0x9d, 0x72, 0x91, 0xea,
	0x00, 0x18, 0xaa, 0x4b, 0x41, 0x10, 0xf1, 0xf5, 0x00, 0x7f, 0xe5, 0xd8, 0xee, 0x00, 0x8d, 0xf5,
	0x2e, 0xa2, 0x19, 0xb8, 0x9d, 0xbe, 0x64, 0xfe, 0x1a, 0xe5, 0x14, 0x7f, 0xd5, 0x50, 0x1b, 0x9c,
	0xaa, 0xbe, 0x46, 0x22, 0x08, 0x6f, 0x53, 0x91, 0xbe, 0x47, 0x37, 0x8e, 0xed, 0xea, 0xd3, 0x69,
	0x95, 0xd5, 0x1c, 0x5a, 0xa1, 0x7e, 0x48, 0x04, 0xc5, 0x37, 0x8f, 0xed, 0xac, 0x5a, 0x0a, 0x35,
	0x71, 0x36, 0xa2, 0x01, 0x6d, 0x24, 0x24, 0xe9, 0x4b, 0x7c, 0x78, 0x6c, 0x4f, 0x9c, 0x21, 0xa9,
	0xd4, 0x5b, 0x22, 0x6a, 0x51, 0x29, 0xe1, 0x59, 0x78, 0xc9, 0x51, 0x0f, 0x49, 0x55, 0xe9, 0x3b,
	0x44, 0xd6, 0xa2, 0x30, 0x12, 0x82, 0xf1, 0x76, 0x9a, 0xdd, 0xef, 0x1c, 0xdb, 0x95, 0x6e, 0x4b,
	0xd4, 0xb4, 0xa8, 0x75, 0x88, 0xe8, 0xe2, 0x1f, 0x1e, 0xdb, 0xd3, 0x22, 0xc5, 0xd5, 0x89, 0x97,
	0xe2, 0x28, 0x0c, 0x23, 0xb8, 0x4e, 0x99, 0x90, 0x6e, 0x8c, 0x7f, 0xec, 0x9c, 0xd8, 0x52, 0xa8,
	0x2e, 0xda, 0x21, 0x72, 0x35, 0xe2, 0xc9, 0x7a, 0x90, 0x6e, 0xe9, 0xd5, 0x37, 0xec, 0x2e, 0x32,
	0x78, 0x75, 0x92, 0xb5, 0x30, 0x6a, 0x92, 0x30, 0x2d, 0x85, 0x0d, 0x3a, 0xa0, 0x21, 0x3e, 0x7a,
	0xc3, 0x3e, 0x89, 0x2d, 0xf1, 0x9e, 0x42, 0xe7, 0x04, 0xed, 0xad, 0xf3, 0x01, 0x4b, 0xe8, 0x62,
	0x1b, 0xf0, 0xa5, 0x7e, 0x12, 0x2d, 0xb5, 0x05, 0xa5, 0xe9, 0x2f, 0xdf, 0xb8, 0xfd, 0x80, 0xb6,
	0x44, 0xa5, 0x56, 0x75, 0x40, 0xa3, 0xdf, 0x24, 0xbe, 0x0f, 0x9f, 0x19, 0x2b, 0x4c, 0xc6, 0x21,
	0x39, 0xd8, 0xee, 0x30, 0x11, 0x7c, 0xae, 0x97, 0x2e, 0x77, 0x68, 0x2c, 0x37, 0x4e, 0xee, 0xd5,
	0xd1, 0x1c, 0x8f, 0x12, 0xd6, 0x3a, 0xd8, 0x22, 0x22, 0x21, 0xbb, 0x74, 0x83, 0xed, 0xd2, 0x3a,
	0xe1, 0xbb, 0x8c, 0xb7, 0x37, 0x98, 0xcc, 0x9a, 0xe1, 0x65, 0x63, 0xc9, 0xb1, 0x7a, 0xef, 0x63,
	0xe8, 0x7d, 0x50, 0x34, 0xac, 0xdd, 0x49, 0x48, 0xb8, 0xdb, 0xd8, 0x63, 0x89, 0xdf, 0xc1, 0xbf,
	0xb8, 0xa3, 0x2f, 0xe2, 0x0a, 0x54, 0x86, 0xd3, 0x0e, 0xa8, 0x33, 0xde, 0xde, 0x61, 0x92, 0x35,
	0x43, 0x8a, 0x6f, 0x1b, 0x71, 0x65, 0x12, 0x35, 0xe1, 0x0a, 0x18, 0x52, 0x06, 0xc7, 0xc4, 0x77,
	0x8c, 0xd0, 0x52, 0x8d, 0x1d, 0x5b, 0xa7, 0x41, 0x1c, 0x31, 0x9e, 0xe0, 0x5f, 0x8e, 0x8e, 0xcd,
	0x35, 0x50, 0x47, 0x49, 0x24, 0xfc, 0xce, 0x0a, 0x93, 0xa4, 0x19, 0x66, 0xb7, 0xf9, 0x67, 0x23,
	0xce, 0xe1, 0x87, 0x1d, 0xb1, 0x49, 0xda, 0xcc, 0x6f, 0x45, 0x3c, 0x4b, 0xf1, 0x5f, 0x9d, 0x53,
	0xda, 0x12, 0xf5, 0xba, 0xec, 0xb0, 0x38, 0xbb, 0xe6, 0xdf, 0x3f, 0x60, 0xbd, 0x2e, 0x8a, 0x51,
	0x6f, 0xfe, 0x52, 0x3f, 0xe9, 0xa4, 0xc2, 0x9f, 0x19, 0x42, 0x9d, 0x52, 0xbd, 0xbc, 0x1a, 0x89,
	0x26, 0xcb, 0x9a, 0xe0, 0xe7, 0x86, 0xd6, 0x24, 0xd5, 0xf4, 0x5a, 0x8b, 0x82, 0x0c, 0xc3, 0x7f,
	0x32, 0xc4, 0x06, 0xa7, 0xf6, 0x0a, 0x7f, 0xa7, 0x39, 0x71, 0xf6, 0xaa, 0x98, 0xfc, 0x6b, 0x07,
	0xba, 0x39, 0xeb, 0xa7, 0xb7, 0xff, 0x60, 0xef, 0x60, 0x48, 0xea, 0xea, 0x46, 0x27, 0xda, 0xe3,
	0xf8, 0x5f, 0xe5, 0xea, 0x94, 0xf4, 0x3e, 0x83, 0xce, 0xc2, 0x01, 0x04, 0x95, 0x1d, 0x4e, 0xf7,
	0xe4, 0xd5, 0xb4, 0x6a, 0xd3, 0xfd, 0x3c, 0x77, 0xa4, 0x87, 0x8d, 0x50, 0xa9, 0x2a, 0xce, 0x66,
	0xc7, 0x0e, 0x53, 0xfd, 0xfe, 0xc2, 0x91, 0x5d, 0xc5, 0xa6, 0x40, 0xcd, 0x96, 0x02, 0x4c, 0x7f,
	0xef, 0x6b, 0x46, 0x90, 0xc3, 0xe7, 0x33, 0x35, 0x7b, 0xa8, 0x76, 0x58, 0x8c, 0x5f, 0x3c, 0xb2,
	0xcf, 0x35, 0x24, 0xd5, 0xcb, 0x50, 0x3c, 0xb1, 0xa0, 0xff, 0x86, 0xa1, 0xb7, 0x69, 0x75, 0x12,
	0x80, 0xae, 0x0c, 0xa8, 0x50, 0xbf, 0xf1, 0x4d, 0xe7, 0x24, 0xa6, 0x40, 0x55, 0x6a, 0x0e, 0x16,
	0xbf, 0xf5, 0xad, 0x23, 0xbb, 0x52, 0x6d, 0x89, 0x16, 0x99, 0x42, 0xdb, 0x22, 0x4b, 0xfb, 0xcd,
	0xd2, 0x48, 0x5d, 0xa2, 0xed, 0xb4, 0xb6, 0xe8, 0xe7, 0x71, 0x87, 0xa5, 0x3b, 0x1d, 0x0a, 0xd4,
	0x57, 0x4a, 0xa3, 0xdf, 0x94, 0xbe, 0x60, 0x4d, 0x7a, 0x95, 0x12, 0xd1, 0x3c, 0x20, 0x52, 0x32,
	0x99, 0x10, 0x9e, 0xa8, 0xf9, 0xf3, 0x7d, 0x63, 0x95, 0xf1, 0x01, 0xea, 0x75, 0xd9, 0x86, 0x06,
	0x6e, 0x52, 0x22, 0x68, 0xf6, 0x99, 0xf9, 0x9a, 0xb1, 0x4c, 0x89, 0x02, 0xe2, 0x62, 0x41, 0xc3,
	0x88, 0x04, 0xfa, 0x5c, 0xf8, 0x9b, 0x19, 0xe7, 0x2a, 0xf2, 0x6f, 0x3b, 0x1a, 0x90, 0x70, 0x8f,
	0x84, 0x61, 0x1a, 0xf5, 0x96, 0x53, 0x39, 0x06, 0xef, 0x7d, 0x16, 0x3d, 0x92, 0x4d, 0xe3, 0x6b,
	0xbc, 0x6c, 0x70, 0xff, 0xd3, 0x08, 0xaf, 0x92, 0xaa, 0xaa, 0xca, 0xea, 0x52, 0x7d, 0x07, 0xfc,
	0xe3, 0x2f, 0x76, 0x55, 0xe9, 0xf4, 0x85, 0xcf, 0x2b, 0xc3, 0x2e, 0xe3, 0xd4, 0xb0, 0x7f, 0x04,
	0x3d, 0xd8, 0x67, 0x7c, 0x85, 0x24, 0x04, 0x4f, 0xcf, 0x4d, 0xce, 0x4f, 0x2f, 0x4e, 0x2f, 0x5c,
	0x0f, 0xfc, 0xeb, 0x19, 0x54, 0xcf, 0x39, 0xef, 0x31, 0x74, 0xba, 0xcf, 0x5b, 0x8c, 0x33, 0xd9,
	0xa1, 0xc1, 0x75, 0x70, 0xf8, 0x33, 0x73, 0x93, 0xf3, 0x93, 0x75, 0x0b, 0xbd, 0x70, 0xe7, 0x11,
	0x84, 0x86, 0xf1, 0xde, 0x59, 0x34, 0xd9, 0x67, 0x1c, 0xc3, 0x63, 0x3b, 0xa9, 0x36, 0x04, 0x80,
	0x77, 0x4e, 0xb3, 0xf8, 0x13, 0xf3, 0x33, 0xb9, 0xfd, 0x29, 0x8c, 0xfe, 0x14, 0x1f, 0x3a, 0xf9,
	0x9c, 0x4d, 0x31, 0x30, 0xc1, 0xbe, 0xe1, 0xe1, 0x73, 0x3a, 0x87, 0xe1, 0x13, 0x24, 0x36, 0xdd,
	0x7b, 0x2e, 0x29, 0x70, 0x30, 0x60, 0xed, 0x32, 0xdf, 0xae, 0x50, 0xef, 0x1c, 0x3a, 0x49, 0x4a,
	0x1c, 0x7b, 0x06, 0x42, 0x74, 0xab, 0xcc, 0xab, 0x2b, 0x14, 0xf6, 0xef, 0x0f, 0x5d, 0x7a, 0xb1,
	0x7f, 0xc0, 0x60, 0x68, 0xf8, 0x15, 0xfe, 0xdc, 0x24, 0x61, 0x78, 0xfb, 0xa3, 0x9d, 0xb9, 0xc1,
	0x41, 0x29, 0x74, 0x4b, 0x3d, 0x79, 0xbe, 0x01, 0x9b, 0x86, 0x4c, 0x35, 0x4d, 0x37, 0x5e, 0x64,
	0x2a, 0xc7, 0xe1, 0xac, 0xbe, 0xee, 0xc3, 0x8b, 0xbb, 0xca, 0x50, 0xc8, 0x54, 0x58, 0xe2, 0xc0,
	0x33, 0x30, 0x67, 0x6d, 0xef, 0x9d, 0x81, 0x39, 0x6b, 0xbb, 0xee, 0x0c, 0xf4, 0x30, 0x9a, 0x24,
	0x8e, 0xdf, 0x06, 0x08, 0x9e, 0x29, 0x7f, 0x94, 0xd3, 0xd6, 0x18, 0x58, 0x21, 0x72, 0x3c, 0x36,
	0x40, 0xe9, 0xc9, 0xcb, 0xdd, 0x75, 0x81, 0x43, 0xee, 0xbb, 0xae, 0xaf, 0xce, 0xcf, 0x6f, 0x70,
	0xf0, 0x78, 0x77, 0x1d, 0x47, 0x9d, 0x4b, 0x75, 0x2a, 0x3d, 0x73, 0x89, 0x97, 0xce, 0x40, 0xa8,
	0x6e, 0x5a, 0xea, 0xa2, 0x73, 0x18, 0x76, 0xd5, 0x74, 0xfd, 0x73, 0xb1, 0x2b, 0x9d, 0x2b, 0xb4,
	0xa6, 0x73, 0x36, 0xb5, 0xb9, 0x6d, 0xbe, 0x88, 0x66, 0x5a, 0xae, 0x67, 0x2e, 0xb4, 0x3a, 0x07,
	0xbb, 0x6c, 0x19, 0x6e, 0xb9, 0xe8, 0x41, 0x05, 0xc3, 0x50, 0x94, 0xd5, 0x3e, 0xd9, 0xe1, 0xa1,
	0x33, 0xba, 0x15, 0x0e, 0xd9, 0x24, 0xe1, 0xc9, 0x89, 0xc7, 0x78, 0x63, 0x57, 0xe0, 0x5d, 0x45,
	0xb3, 0xf1, 0xbb, 0x71, 0xc5, 0x63, 0xd4, 0xd0, 0x73, 0x71, 0xa5, 0x1f, 0xb6, 0x69, 0xb0, 0x15,
	0xf1, 0x3b, 0x77, 0xc2, 0x95, 0x5a, 0x78, 0xb2, 0xda, 0xe3, 0x3c, 0x70, 0x89, 0x02, 0xaa, 0xb5,
	0xe5, 0xb8, 0xdf, 0x7c, 0x3e, 0xeb, 0x94, 0xf7, 0x28, 0x7a, 0xa8, 0x6b, 0xf9, 0xde, 0xfc, 0xae,
	0x87, 0x04, 0xd4, 0x8e, 0x74, 0x1d, 0x6f, 0x51, 0x3b, 0x3a, 0x07, 0x19, 0x93, 0xa5, 0x5e, 0xb7,
	0x98, 0x52, 0x16, 0x0d, 0xdd, 0x1e, 0x8e, 0x72, 0xb9, 0x1a, 0x03, 0xba, 0x78, 0x94, 0xbf, 0xd5,
	0x18, 0xb0, 0xff, 0x03, 0xcd, 0xb6, 0xae, 0x07, 0x96, 0xaf, 0xb5, 0x58, 0xe8, 0x58, 0xbf, 0xc4,
	0xcf, 0x66, 0x20, 0x9c, 0x87, 0x54, 0x3a, 0x59, 0x9b, 0x86, 0x9c, 0x0e, 0x72, 0x8f, 0x6a, 0xf9,
	0xd7, 0x21, 0x01, 0x1d, 0xd4, 0xae, 0x76, 0xad, 0x0e, 0xff, 0x5f, 0xb5, 0xac, 0x4f, 0xa1, 0x73,
	0xf2, 0x9d, 0xfb, 0xd5, 0x4a, 0xed, 0xff, 0xc4, 0xac, 0x2e, 0xa0, 0xd3, 0x61, 0x95, 0x53, 0xb5,
	0x58, 0xc8, 0x67, 0xb7, 0xda, 0xa3, 0x3a, 0x3c, 0xcc, 0x98, 0xee, 0x18, 0x77, 0xea, 0x0a, 0x8c,
	0xa8, 0x11, 0xbe, 0xd4, 0x15, 0xfc, 0x47, 0xa6, 0x74, 0x11, 0x9d, 0x19, 0x54, 0x3b, 0x52, 0x87,
	0x87, 0xd9, 0x3d, 0x28, 0xf5, 0xa2, 0x39, 0x0c, 0x6f, 0x23, 0x29, 0x77, 0xa1, 0x05, 0x0e, 0xbd,
	0xd6, 0x1a, 0xe5, 0x3f, 0x35, 0x06, 0x6a, 0xbd, 0x3d, 0xc2, 0x79, 0x0e, 0x09, 0xd8, 0x53, 0xbb,
	0xd4, 0x73, 0xe6, 0x70, 0xfa, 0xe2, 0x8f, 0x72, 0x9b, 0x1a, 0x53, 0xe8, 0xca, 0x7c, 0xa6, 0xc6,
	0x80, 0xd5, 0x69, 0x8d, 0x75, 0x98, 0x65, 0x12, 0xa8, 0x3b, 0x52, 0xe5, 0x2d, 0x2d, 0x16, 0x5e,
	0x35, 0x52, 0xe1, 0x2a, 0x4d, 0x32, 0x9d, 0x61, 0xa3, 0xfc, 0xa4, 0xc6, 0xc0, 0xc4, 0x8d, 0x47,
	0x3b, 0x49, 0x83, 0x83, 0x1d, 0xc7, 0x55, 0x1e, 0xd2, 0x62, 0xa1, 0xaa, 0xe2, 0x6a, 0xf7, 0xe8,
	0xf0, 0x79, 0x4c, 0x85, 0x6f, 0x74, 0xf8, 0x7c, 0x5f, 0x23, 0x1d, 0xa3, 0xc5, 0xc2, 0xdb, 0x2d,
	0xdf, 0x8d, 0x57, 0x1c, 0xa3, 0x86, 0xc9, 0x9d, 0x54, 0xba, 0x44, 0x9b, 0xfe, 0x3f, 0xb5, 0x88,
	0x17, 0xd1, 0x0c, 0x19, 0xed, 0x0f, 0x0d, 0x6e, 0x79, 0xee, 0xe8, 0xde, 0xec, 0xc4, 0xeb, 0xf7,
	0x66, 0x27, 0xfe, 0x7e, 0x6f, 0x76, 0xe2, 0xcb, 0xf7, 0x67, 0x4f, 0xbc, 0x7e, 0x7f, 0xf6, 0xc4,
	0x9b, 0xf7, 0x67, 0x4f, 0x3c, 0x7d, 0x6a, 0xe1, 0x53, 0x11, 0x0b, 0x9a, 0xff, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x5f, 0x7a, 0x54, 0x0c, 0x11, 0x1e, 0x00, 0x00,
}

func (m *D5EBReqBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *D5EBReqBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *D5EBReqBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqApolloStatus))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xfe
	i--
	dAtA[i] = 0xa0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.NotifyOnLikeRankingListFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc6
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMedalwallFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc5
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PreloadDisableFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc5
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqTorchbearerFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc4
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqSubscribeNearbyassistantSwitch))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc2
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnC2CTryFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnMultiTryFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnEverMultiVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnEverC2CVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xb8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnMultiVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xb0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnC2CVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqApolloVipFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqApolloVipLevel))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc0
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqFreshnewsNotifyFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc0
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCharmShown))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xbf
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCharmLevel))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xbd
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqGodFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb4
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqGodForbid))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb4
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqForbidFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb3
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqAuthFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb3
	i--
	dAtA[i] = 0xb8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqVipFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb1
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqVasMagicfontFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.TorchDisableFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMusicRingRedpoint))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMusicRingAutoplay))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMusicRingVisible))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLightalkSwitch))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.NotifyPartakeLikeRankingListFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqSubaccountDisplayThirdQqFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqInvite2GroupAutoAgreeFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqGlobalGroupLevel))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0xa4
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqVasFontIdFlag))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0xa4
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqApolloTimestamp))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9b
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCharm))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9a
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqVasColorringFlag))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9a
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqProfession))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLoveStatus))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqStrangerDeclare))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqStrangerNick))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMusicGene))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqFaceAddonId))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqGroupMemCreditFlag))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x98
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnC2CLastGuideRechargeTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnC2CCallTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnMultiLastGuideRechargeTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqPstnMultiCallTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMssUpdateTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqSimpleUpdateTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqFullAge))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqFullBirthday))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xa0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqBasicCliFlag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqBasicSvrFlag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqExtFlag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLflag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMss1Service))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMss2Identity))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqBubbleId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqOin))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCityZoneId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqAge))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLang3))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLang2))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqLang1))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCityId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x80
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqBirthday))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMss3Bitmapextra))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCommonPlace1))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqConstellation))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xb0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCity))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xa0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqFaceId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqAllow))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqGender))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqProvince))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xa0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqCountry))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqNick))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Appid))
	i--
	dAtA[i] = 0x28
	if len(m.Openid) > 0 {
		for iNdEx := len(m.Openid) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Openid[iNdEx])
			copy(dAtA[i:], m.Openid[iNdEx])
			i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Openid[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.MaxPackageSize))
	i--
	dAtA[i] = 0x18
	if len(m.Uins) > 0 {
		for iNdEx := len(m.Uins) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Uins[iNdEx]))
			i--
			dAtA[i] = 0x8
		}
	}
	return len(dAtA) - i, nil
}

func (m *D5EBRspBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *D5EBRspBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *D5EBRspBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnfinishedUins) > 0 {
		for iNdEx := len(m.UnfinishedUins) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.UnfinishedUins[iNdEx]))
			i--
			dAtA[i] = 0x60
		}
	}
	if len(m.UinData) > 0 {
		for iNdEx := len(m.UinData) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UinData[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintOidb0X5Eb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	return len(dAtA) - i, nil
}

func (m *UdcUinData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UdcUinData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UdcUinData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ApolloStatus))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xfe
	i--
	dAtA[i] = 0xa0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.NotifyOnLikeRankingListFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc6
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqMedalwallFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc5
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PreloadDisableFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc5
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.TorchbearerFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc4
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.SubscribeNearbyassistantSwitch))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc2
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnC2CTryFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnMultiTryFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnEverMultiVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnEverC2CVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xb8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnMultiVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xb0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnC2CVip))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ApolloVipFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc1
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ApolloVipLevel))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc0
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.FreshnewsNotifyFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xc0
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.CharmShown))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xbf
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.CharmLevel))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xbd
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.GodFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb4
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.GodForbid))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb4
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ForbidFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb3
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.AuthFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb3
	i--
	dAtA[i] = 0xb8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.VipFlag))
	i--
	dAtA[i] = 0x14
	i--
	dAtA[i] = 0xb1
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.VasMagicfontFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.TorchDisableFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.MusicRingRedpoint))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.MusicRingAutoplay))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.MusicRingVisible))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.LightalkSwitch))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.NotifyPartakeLikeRankingListFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.SubaccountDisplayThirdQqFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ReqInvite2GroupAutoAgreeFlag))
	i--
	dAtA[i] = 0x13
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.GlobalGroupLevel))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0xa4
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.VasFontId))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0xa4
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ApolloTimestamp))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9b
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Charm))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9a
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.VasColorringId))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x9a
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Profession))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.LoveStatus))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0xe0
	if m.StrangerDeclare != nil {
		i -= len(m.StrangerDeclare)
		copy(dAtA[i:], m.StrangerDeclare)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.StrangerDeclare)))
		i--
		dAtA[i] = 0xd
		i--
		dAtA[i] = 0x99
		i--
		dAtA[i] = 0xda
	}
	if m.StrangerNick != nil {
		i -= len(m.StrangerNick)
		copy(dAtA[i:], m.StrangerNick)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.StrangerNick)))
		i--
		dAtA[i] = 0xd
		i--
		dAtA[i] = 0x99
		i--
		dAtA[i] = 0xd2
	}
	if m.MusicGene != nil {
		i -= len(m.MusicGene)
		copy(dAtA[i:], m.MusicGene)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.MusicGene)))
		i--
		dAtA[i] = 0xd
		i--
		dAtA[i] = 0x99
		i--
		dAtA[i] = 0x92
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.FaceAddonId))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x99
	i--
	dAtA[i] = 0x88
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.GroupMemCreditFlag))
	i--
	dAtA[i] = 0xd
	i--
	dAtA[i] = 0x98
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnC2CLastGuideRechargeTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnC2CCallTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnMultiLastGuideRechargeTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.PstnMultiCallTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.MssUpdateTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.SimpleUpdateTime))
	i--
	dAtA[i] = 0xc
	i--
	dAtA[i] = 0xd9
	i--
	dAtA[i] = 0xd0
	if m.FullAge != nil {
		i -= len(m.FullAge)
		copy(dAtA[i:], m.FullAge)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.FullAge)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd9
		i--
		dAtA[i] = 0xaa
	}
	if m.FullBirthday != nil {
		i -= len(m.FullBirthday)
		copy(dAtA[i:], m.FullBirthday)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.FullBirthday)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd9
		i--
		dAtA[i] = 0xa2
	}
	if m.BasicCliFlag != nil {
		i -= len(m.BasicCliFlag)
		copy(dAtA[i:], m.BasicCliFlag)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.BasicCliFlag)))
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0xa0
		i--
		dAtA[i] = 0xfa
	}
	if m.BasicSvrFlag != nil {
		i -= len(m.BasicSvrFlag)
		copy(dAtA[i:], m.BasicSvrFlag)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.BasicSvrFlag)))
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0xa0
		i--
		dAtA[i] = 0xf2
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.ExtFlag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xe0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Lflag))
	i--
	dAtA[i] = 0xa
	i--
	dAtA[i] = 0xa0
	i--
	dAtA[i] = 0xd8
	if m.Mss1Service != nil {
		i -= len(m.Mss1Service)
		copy(dAtA[i:], m.Mss1Service)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Mss1Service)))
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0xa0
		i--
		dAtA[i] = 0xd2
	}
	if m.Mss2Identity != nil {
		i -= len(m.Mss2Identity)
		copy(dAtA[i:], m.Mss2Identity)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Mss2Identity)))
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0xa0
		i--
		dAtA[i] = 0xca
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.BubbleId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Oin))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe5
	i--
	dAtA[i] = 0xc0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.CityZoneId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xc8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Age))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0xa8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Lang3))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x98
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Lang2))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x90
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Lang1))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe4
	i--
	dAtA[i] = 0x88
	if m.CityId != nil {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe4
		i--
		dAtA[i] = 0x82
	}
	if m.Birthday != nil {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe3
		i--
		dAtA[i] = 0xfa
	}
	if m.Mss3Bitmapextra != nil {
		i -= len(m.Mss3Bitmapextra)
		copy(dAtA[i:], m.Mss3Bitmapextra)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Mss3Bitmapextra)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe3
		i--
		dAtA[i] = 0xf2
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.CommonPlace1))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xd8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Constellation))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe3
	i--
	dAtA[i] = 0xb0
	if m.City != nil {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe3
		i--
		dAtA[i] = 0xa2
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.FaceId))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xf8
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Allow))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xf0
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Gender))
	i--
	dAtA[i] = 0x9
	i--
	dAtA[i] = 0xe2
	i--
	dAtA[i] = 0xc8
	if m.Province != nil {
		i -= len(m.Province)
		copy(dAtA[i:], m.Province)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Province)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
		i--
		dAtA[i] = 0xa2
	}
	if m.Country != nil {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
		i--
		dAtA[i] = 0x9a
	}
	if m.Nick != nil {
		i -= len(m.Nick)
		copy(dAtA[i:], m.Nick)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Nick)))
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
		i--
		dAtA[i] = 0x92
	}
	if m.Openid != nil {
		i -= len(m.Openid)
		copy(dAtA[i:], m.Openid)
		i = encodeVarintOidb0X5Eb(dAtA, i, uint64(len(m.Openid)))
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintOidb0X5Eb(dAtA, i, uint64(m.Uin))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintOidb0X5Eb(dAtA []byte, offset int, v uint64) int {
	offset -= sovOidb0X5Eb(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *D5EBReqBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Uins) > 0 {
		for _, e := range m.Uins {
			n += 1 + sovOidb0X5Eb(uint64(e))
		}
	}
	n += 1 + sovOidb0X5Eb(uint64(m.MaxPackageSize))
	if len(m.Openid) > 0 {
		for _, b := range m.Openid {
			l = len(b)
			n += 1 + l + sovOidb0X5Eb(uint64(l))
		}
	}
	n += 1 + sovOidb0X5Eb(uint64(m.Appid))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqNick))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCountry))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqProvince))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqGender))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqAllow))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqFaceId))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCity))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqConstellation))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCommonPlace1))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMss3Bitmapextra))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqBirthday))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCityId))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLang1))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLang2))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLang3))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqAge))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCityZoneId))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqOin))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqBubbleId))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMss2Identity))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMss1Service))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLflag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqExtFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqBasicSvrFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqBasicCliFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqFullBirthday))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqFullAge))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqSimpleUpdateTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMssUpdateTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnMultiCallTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnMultiLastGuideRechargeTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnC2CCallTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnC2CLastGuideRechargeTime))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqGroupMemCreditFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqFaceAddonId))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMusicGene))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqStrangerNick))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqStrangerDeclare))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLoveStatus))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqProfession))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqVasColorringFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCharm))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqApolloTimestamp))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqVasFontIdFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqGlobalGroupLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqInvite2GroupAutoAgreeFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqSubaccountDisplayThirdQqFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.NotifyPartakeLikeRankingListFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqLightalkSwitch))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMusicRingVisible))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMusicRingAutoplay))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMusicRingRedpoint))
	n += 3 + sovOidb0X5Eb(uint64(m.TorchDisableFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqVasMagicfontFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqVipFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqAuthFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqForbidFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqGodForbid))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqGodFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCharmLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqCharmShown))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqFreshnewsNotifyFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqApolloVipLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqApolloVipFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnC2CVip))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnMultiVip))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnEverC2CVip))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnEverMultiVip))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnMultiTryFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqPstnC2CTryFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqSubscribeNearbyassistantSwitch))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqTorchbearerFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.PreloadDisableFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMedalwallFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.NotifyOnLikeRankingListFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqApolloStatus))
	return n
}

func (m *D5EBRspBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UinData) > 0 {
		for _, e := range m.UinData {
			l = e.Size()
			n += 1 + l + sovOidb0X5Eb(uint64(l))
		}
	}
	if len(m.UnfinishedUins) > 0 {
		for _, e := range m.UnfinishedUins {
			n += 1 + sovOidb0X5Eb(uint64(e))
		}
	}
	return n
}

func (m *UdcUinData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovOidb0X5Eb(uint64(m.Uin))
	if m.Openid != nil {
		l = len(m.Openid)
		n += 1 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.Nick != nil {
		l = len(m.Nick)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.Country != nil {
		l = len(m.Country)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.Province != nil {
		l = len(m.Province)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.Gender))
	n += 3 + sovOidb0X5Eb(uint64(m.Allow))
	n += 3 + sovOidb0X5Eb(uint64(m.FaceId))
	if m.City != nil {
		l = len(m.City)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.Constellation))
	n += 3 + sovOidb0X5Eb(uint64(m.CommonPlace1))
	if m.Mss3Bitmapextra != nil {
		l = len(m.Mss3Bitmapextra)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.Birthday != nil {
		l = len(m.Birthday)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.CityId != nil {
		l = len(m.CityId)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.Lang1))
	n += 3 + sovOidb0X5Eb(uint64(m.Lang2))
	n += 3 + sovOidb0X5Eb(uint64(m.Lang3))
	n += 3 + sovOidb0X5Eb(uint64(m.Age))
	n += 3 + sovOidb0X5Eb(uint64(m.CityZoneId))
	n += 3 + sovOidb0X5Eb(uint64(m.Oin))
	n += 3 + sovOidb0X5Eb(uint64(m.BubbleId))
	if m.Mss2Identity != nil {
		l = len(m.Mss2Identity)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.Mss1Service != nil {
		l = len(m.Mss1Service)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.Lflag))
	n += 3 + sovOidb0X5Eb(uint64(m.ExtFlag))
	if m.BasicSvrFlag != nil {
		l = len(m.BasicSvrFlag)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.BasicCliFlag != nil {
		l = len(m.BasicCliFlag)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.FullBirthday != nil {
		l = len(m.FullBirthday)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.FullAge != nil {
		l = len(m.FullAge)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.SimpleUpdateTime))
	n += 3 + sovOidb0X5Eb(uint64(m.MssUpdateTime))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnMultiCallTime))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnMultiLastGuideRechargeTime))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnC2CCallTime))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnC2CLastGuideRechargeTime))
	n += 3 + sovOidb0X5Eb(uint64(m.GroupMemCreditFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.FaceAddonId))
	if m.MusicGene != nil {
		l = len(m.MusicGene)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.StrangerNick != nil {
		l = len(m.StrangerNick)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	if m.StrangerDeclare != nil {
		l = len(m.StrangerDeclare)
		n += 3 + l + sovOidb0X5Eb(uint64(l))
	}
	n += 3 + sovOidb0X5Eb(uint64(m.LoveStatus))
	n += 3 + sovOidb0X5Eb(uint64(m.Profession))
	n += 3 + sovOidb0X5Eb(uint64(m.VasColorringId))
	n += 3 + sovOidb0X5Eb(uint64(m.Charm))
	n += 3 + sovOidb0X5Eb(uint64(m.ApolloTimestamp))
	n += 3 + sovOidb0X5Eb(uint64(m.VasFontId))
	n += 3 + sovOidb0X5Eb(uint64(m.GlobalGroupLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqInvite2GroupAutoAgreeFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.SubaccountDisplayThirdQqFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.NotifyPartakeLikeRankingListFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.LightalkSwitch))
	n += 3 + sovOidb0X5Eb(uint64(m.MusicRingVisible))
	n += 3 + sovOidb0X5Eb(uint64(m.MusicRingAutoplay))
	n += 3 + sovOidb0X5Eb(uint64(m.MusicRingRedpoint))
	n += 3 + sovOidb0X5Eb(uint64(m.TorchDisableFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.VasMagicfontFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.VipFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.AuthFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ForbidFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.GodForbid))
	n += 3 + sovOidb0X5Eb(uint64(m.GodFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.CharmLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.CharmShown))
	n += 3 + sovOidb0X5Eb(uint64(m.FreshnewsNotifyFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ApolloVipLevel))
	n += 3 + sovOidb0X5Eb(uint64(m.ApolloVipFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnC2CVip))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnMultiVip))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnEverC2CVip))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnEverMultiVip))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnMultiTryFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.PstnC2CTryFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.SubscribeNearbyassistantSwitch))
	n += 3 + sovOidb0X5Eb(uint64(m.TorchbearerFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.PreloadDisableFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ReqMedalwallFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.NotifyOnLikeRankingListFlag))
	n += 3 + sovOidb0X5Eb(uint64(m.ApolloStatus))
	return n
}

func sovOidb0X5Eb(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOidb0X5Eb(x uint64) (n int) {
	return sovOidb0X5Eb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *D5EBReqBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0X5Eb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: D5EBReqBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: D5EBReqBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0X5Eb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Uins = append(m.Uins, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0X5Eb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOidb0X5Eb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthOidb0X5Eb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Uins) == 0 {
					m.Uins = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOidb0X5Eb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Uins = append(m.Uins, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Uins", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPackageSize", wireType)
			}
			m.MaxPackageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPackageSize |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Openid", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Openid = append(m.Openid, make([]byte, postIndex-iNdEx))
			copy(m.Openid[len(m.Openid)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Appid", wireType)
			}
			m.Appid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Appid |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20002:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqNick", wireType)
			}
			m.ReqNick = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqNick |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20003:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCountry", wireType)
			}
			m.ReqCountry = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCountry |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20004:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqProvince", wireType)
			}
			m.ReqProvince = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqProvince |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20009:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqGender", wireType)
			}
			m.ReqGender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqGender |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20014:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqAllow", wireType)
			}
			m.ReqAllow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqAllow |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20015:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFaceId", wireType)
			}
			m.ReqFaceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqFaceId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20020:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCity", wireType)
			}
			m.ReqCity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20022:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqConstellation", wireType)
			}
			m.ReqConstellation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqConstellation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20027:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCommonPlace1", wireType)
			}
			m.ReqCommonPlace1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCommonPlace1 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20030:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMss3Bitmapextra", wireType)
			}
			m.ReqMss3Bitmapextra = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMss3Bitmapextra |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20031:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqBirthday", wireType)
			}
			m.ReqBirthday = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqBirthday |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20032:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCityId", wireType)
			}
			m.ReqCityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCityId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20033:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLang1", wireType)
			}
			m.ReqLang1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLang1 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20034:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLang2", wireType)
			}
			m.ReqLang2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLang2 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20035:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLang3", wireType)
			}
			m.ReqLang3 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLang3 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20037:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqAge", wireType)
			}
			m.ReqAge = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqAge |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20041:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCityZoneId", wireType)
			}
			m.ReqCityZoneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCityZoneId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20056:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqOin", wireType)
			}
			m.ReqOin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqOin |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20059:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqBubbleId", wireType)
			}
			m.ReqBubbleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqBubbleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21001:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMss2Identity", wireType)
			}
			m.ReqMss2Identity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMss2Identity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21002:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMss1Service", wireType)
			}
			m.ReqMss1Service = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMss1Service |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21003:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLflag", wireType)
			}
			m.ReqLflag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLflag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21004:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqExtFlag", wireType)
			}
			m.ReqExtFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqExtFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21006:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqBasicSvrFlag", wireType)
			}
			m.ReqBasicSvrFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqBasicSvrFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21007:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqBasicCliFlag", wireType)
			}
			m.ReqBasicCliFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqBasicCliFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26004:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFullBirthday", wireType)
			}
			m.ReqFullBirthday = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqFullBirthday |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26005:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFullAge", wireType)
			}
			m.ReqFullAge = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqFullAge |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26010:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqSimpleUpdateTime", wireType)
			}
			m.ReqSimpleUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqSimpleUpdateTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26011:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMssUpdateTime", wireType)
			}
			m.ReqMssUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMssUpdateTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26012:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnMultiCallTime", wireType)
			}
			m.ReqPstnMultiCallTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnMultiCallTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26013:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnMultiLastGuideRechargeTime", wireType)
			}
			m.ReqPstnMultiLastGuideRechargeTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnMultiLastGuideRechargeTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26014:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnC2CCallTime", wireType)
			}
			m.ReqPstnC2CCallTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnC2CCallTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26015:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnC2CLastGuideRechargeTime", wireType)
			}
			m.ReqPstnC2CLastGuideRechargeTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnC2CLastGuideRechargeTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27022:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqGroupMemCreditFlag", wireType)
			}
			m.ReqGroupMemCreditFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqGroupMemCreditFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27025:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFaceAddonId", wireType)
			}
			m.ReqFaceAddonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqFaceAddonId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27026:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMusicGene", wireType)
			}
			m.ReqMusicGene = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMusicGene |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27034:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqStrangerNick", wireType)
			}
			m.ReqStrangerNick = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqStrangerNick |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27035:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqStrangerDeclare", wireType)
			}
			m.ReqStrangerDeclare = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqStrangerDeclare |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27036:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLoveStatus", wireType)
			}
			m.ReqLoveStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLoveStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27037:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqProfession", wireType)
			}
			m.ReqProfession = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqProfession |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27041:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqVasColorringFlag", wireType)
			}
			m.ReqVasColorringFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqVasColorringFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27052:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCharm", wireType)
			}
			m.ReqCharm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCharm |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27059:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqApolloTimestamp", wireType)
			}
			m.ReqApolloTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqApolloTimestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqVasFontIdFlag", wireType)
			}
			m.ReqVasFontIdFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqVasFontIdFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27208:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqGlobalGroupLevel", wireType)
			}
			m.ReqGlobalGroupLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqGlobalGroupLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40346:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqInvite2GroupAutoAgreeFlag", wireType)
			}
			m.ReqInvite2GroupAutoAgreeFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqInvite2GroupAutoAgreeFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40348:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqSubaccountDisplayThirdQqFlag", wireType)
			}
			m.ReqSubaccountDisplayThirdQqFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqSubaccountDisplayThirdQqFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40350:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyPartakeLikeRankingListFlag", wireType)
			}
			m.NotifyPartakeLikeRankingListFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyPartakeLikeRankingListFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40506:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqLightalkSwitch", wireType)
			}
			m.ReqLightalkSwitch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqLightalkSwitch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40507:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMusicRingVisible", wireType)
			}
			m.ReqMusicRingVisible = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMusicRingVisible |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40508:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMusicRingAutoplay", wireType)
			}
			m.ReqMusicRingAutoplay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMusicRingAutoplay |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40509:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMusicRingRedpoint", wireType)
			}
			m.ReqMusicRingRedpoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMusicRingRedpoint |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40525:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TorchDisableFlag", wireType)
			}
			m.TorchDisableFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TorchDisableFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40530:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqVasMagicfontFlag", wireType)
			}
			m.ReqVasMagicfontFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqVasMagicfontFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41756:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqVipFlag", wireType)
			}
			m.ReqVipFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqVipFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41783:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqAuthFlag", wireType)
			}
			m.ReqAuthFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqAuthFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41784:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqForbidFlag", wireType)
			}
			m.ReqForbidFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqForbidFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41804:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqGodForbid", wireType)
			}
			m.ReqGodForbid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqGodForbid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41805:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqGodFlag", wireType)
			}
			m.ReqGodFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqGodFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41950:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCharmLevel", wireType)
			}
			m.ReqCharmLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCharmLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41973:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqCharmShown", wireType)
			}
			m.ReqCharmShown = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqCharmShown |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41993:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFreshnewsNotifyFlag", wireType)
			}
			m.ReqFreshnewsNotifyFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqFreshnewsNotifyFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41999:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqApolloVipLevel", wireType)
			}
			m.ReqApolloVipLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqApolloVipLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42003:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqApolloVipFlag", wireType)
			}
			m.ReqApolloVipFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqApolloVipFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42005:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnC2CVip", wireType)
			}
			m.ReqPstnC2CVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnC2CVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42006:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnMultiVip", wireType)
			}
			m.ReqPstnMultiVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnMultiVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42007:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnEverC2CVip", wireType)
			}
			m.ReqPstnEverC2CVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnEverC2CVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42008:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnEverMultiVip", wireType)
			}
			m.ReqPstnEverMultiVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnEverMultiVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42011:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnMultiTryFlag", wireType)
			}
			m.ReqPstnMultiTryFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnMultiTryFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42012:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqPstnC2CTryFlag", wireType)
			}
			m.ReqPstnC2CTryFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqPstnC2CTryFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42024:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqSubscribeNearbyassistantSwitch", wireType)
			}
			m.ReqSubscribeNearbyassistantSwitch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqSubscribeNearbyassistantSwitch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42051:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqTorchbearerFlag", wireType)
			}
			m.ReqTorchbearerFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqTorchbearerFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42073:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreloadDisableFlag", wireType)
			}
			m.PreloadDisableFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PreloadDisableFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42075:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMedalwallFlag", wireType)
			}
			m.ReqMedalwallFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMedalwallFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42092:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyOnLikeRankingListFlag", wireType)
			}
			m.NotifyOnLikeRankingListFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyOnLikeRankingListFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42980:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqApolloStatus", wireType)
			}
			m.ReqApolloStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqApolloStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0X5Eb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *D5EBRspBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0X5Eb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: D5EBRspBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: D5EBRspBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UinData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UinData = append(m.UinData, &UdcUinData{})
			if err := m.UinData[len(m.UinData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0X5Eb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UnfinishedUins = append(m.UnfinishedUins, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0X5Eb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOidb0X5Eb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthOidb0X5Eb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UnfinishedUins) == 0 {
					m.UnfinishedUins = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOidb0X5Eb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UnfinishedUins = append(m.UnfinishedUins, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UnfinishedUins", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0X5Eb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UdcUinData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0X5Eb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UdcUinData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UdcUinData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uin", wireType)
			}
			m.Uin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uin |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Openid", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Openid = append(m.Openid[:0], dAtA[iNdEx:postIndex]...)
			if m.Openid == nil {
				m.Openid = []byte{}
			}
			iNdEx = postIndex
		case 20002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nick", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nick = append(m.Nick[:0], dAtA[iNdEx:postIndex]...)
			if m.Nick == nil {
				m.Nick = []byte{}
			}
			iNdEx = postIndex
		case 20003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = append(m.Country[:0], dAtA[iNdEx:postIndex]...)
			if m.Country == nil {
				m.Country = []byte{}
			}
			iNdEx = postIndex
		case 20004:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Province", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Province = append(m.Province[:0], dAtA[iNdEx:postIndex]...)
			if m.Province == nil {
				m.Province = []byte{}
			}
			iNdEx = postIndex
		case 20009:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			m.Gender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gender |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20014:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allow", wireType)
			}
			m.Allow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Allow |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20015:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceId", wireType)
			}
			m.FaceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20020:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = append(m.City[:0], dAtA[iNdEx:postIndex]...)
			if m.City == nil {
				m.City = []byte{}
			}
			iNdEx = postIndex
		case 20022:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constellation", wireType)
			}
			m.Constellation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constellation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20027:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommonPlace1", wireType)
			}
			m.CommonPlace1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommonPlace1 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20030:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mss3Bitmapextra", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mss3Bitmapextra = append(m.Mss3Bitmapextra[:0], dAtA[iNdEx:postIndex]...)
			if m.Mss3Bitmapextra == nil {
				m.Mss3Bitmapextra = []byte{}
			}
			iNdEx = postIndex
		case 20031:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = append(m.Birthday[:0], dAtA[iNdEx:postIndex]...)
			if m.Birthday == nil {
				m.Birthday = []byte{}
			}
			iNdEx = postIndex
		case 20032:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = append(m.CityId[:0], dAtA[iNdEx:postIndex]...)
			if m.CityId == nil {
				m.CityId = []byte{}
			}
			iNdEx = postIndex
		case 20033:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang1", wireType)
			}
			m.Lang1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang1 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20034:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang2", wireType)
			}
			m.Lang2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang2 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20035:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang3", wireType)
			}
			m.Lang3 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lang3 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20037:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Age", wireType)
			}
			m.Age = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Age |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20041:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityZoneId", wireType)
			}
			m.CityZoneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CityZoneId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20056:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oin", wireType)
			}
			m.Oin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Oin |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20059:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BubbleId", wireType)
			}
			m.BubbleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BubbleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mss2Identity", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mss2Identity = append(m.Mss2Identity[:0], dAtA[iNdEx:postIndex]...)
			if m.Mss2Identity == nil {
				m.Mss2Identity = []byte{}
			}
			iNdEx = postIndex
		case 21002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mss1Service", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mss1Service = append(m.Mss1Service[:0], dAtA[iNdEx:postIndex]...)
			if m.Mss1Service == nil {
				m.Mss1Service = []byte{}
			}
			iNdEx = postIndex
		case 21003:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lflag", wireType)
			}
			m.Lflag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lflag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21004:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtFlag", wireType)
			}
			m.ExtFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExtFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21006:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasicSvrFlag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BasicSvrFlag = append(m.BasicSvrFlag[:0], dAtA[iNdEx:postIndex]...)
			if m.BasicSvrFlag == nil {
				m.BasicSvrFlag = []byte{}
			}
			iNdEx = postIndex
		case 21007:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasicCliFlag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BasicCliFlag = append(m.BasicCliFlag[:0], dAtA[iNdEx:postIndex]...)
			if m.BasicCliFlag == nil {
				m.BasicCliFlag = []byte{}
			}
			iNdEx = postIndex
		case 26004:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullBirthday", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullBirthday = append(m.FullBirthday[:0], dAtA[iNdEx:postIndex]...)
			if m.FullBirthday == nil {
				m.FullBirthday = []byte{}
			}
			iNdEx = postIndex
		case 26005:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullAge", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullAge = append(m.FullAge[:0], dAtA[iNdEx:postIndex]...)
			if m.FullAge == nil {
				m.FullAge = []byte{}
			}
			iNdEx = postIndex
		case 26010:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SimpleUpdateTime", wireType)
			}
			m.SimpleUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SimpleUpdateTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26011:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MssUpdateTime", wireType)
			}
			m.MssUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MssUpdateTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26012:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnMultiCallTime", wireType)
			}
			m.PstnMultiCallTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnMultiCallTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26013:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnMultiLastGuideRechargeTime", wireType)
			}
			m.PstnMultiLastGuideRechargeTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnMultiLastGuideRechargeTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26014:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnC2CCallTime", wireType)
			}
			m.PstnC2CCallTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnC2CCallTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26015:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnC2CLastGuideRechargeTime", wireType)
			}
			m.PstnC2CLastGuideRechargeTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnC2CLastGuideRechargeTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27022:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupMemCreditFlag", wireType)
			}
			m.GroupMemCreditFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupMemCreditFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27025:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceAddonId", wireType)
			}
			m.FaceAddonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceAddonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27026:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicGene", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MusicGene = append(m.MusicGene[:0], dAtA[iNdEx:postIndex]...)
			if m.MusicGene == nil {
				m.MusicGene = []byte{}
			}
			iNdEx = postIndex
		case 27034:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrangerNick", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrangerNick = append(m.StrangerNick[:0], dAtA[iNdEx:postIndex]...)
			if m.StrangerNick == nil {
				m.StrangerNick = []byte{}
			}
			iNdEx = postIndex
		case 27035:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrangerDeclare", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrangerDeclare = append(m.StrangerDeclare[:0], dAtA[iNdEx:postIndex]...)
			if m.StrangerDeclare == nil {
				m.StrangerDeclare = []byte{}
			}
			iNdEx = postIndex
		case 27036:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoveStatus", wireType)
			}
			m.LoveStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoveStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27037:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Profession", wireType)
			}
			m.Profession = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Profession |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27041:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VasColorringId", wireType)
			}
			m.VasColorringId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VasColorringId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27052:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charm", wireType)
			}
			m.Charm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Charm |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27059:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApolloTimestamp", wireType)
			}
			m.ApolloTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApolloTimestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VasFontId", wireType)
			}
			m.VasFontId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VasFontId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27208:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalGroupLevel", wireType)
			}
			m.GlobalGroupLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GlobalGroupLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40346:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqInvite2GroupAutoAgreeFlag", wireType)
			}
			m.ReqInvite2GroupAutoAgreeFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqInvite2GroupAutoAgreeFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40348:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubaccountDisplayThirdQqFlag", wireType)
			}
			m.SubaccountDisplayThirdQqFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubaccountDisplayThirdQqFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40350:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyPartakeLikeRankingListFlag", wireType)
			}
			m.NotifyPartakeLikeRankingListFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyPartakeLikeRankingListFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40506:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LightalkSwitch", wireType)
			}
			m.LightalkSwitch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LightalkSwitch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40507:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicRingVisible", wireType)
			}
			m.MusicRingVisible = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MusicRingVisible |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40508:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicRingAutoplay", wireType)
			}
			m.MusicRingAutoplay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MusicRingAutoplay |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40509:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicRingRedpoint", wireType)
			}
			m.MusicRingRedpoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MusicRingRedpoint |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40525:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TorchDisableFlag", wireType)
			}
			m.TorchDisableFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TorchDisableFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40530:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VasMagicfontFlag", wireType)
			}
			m.VasMagicfontFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VasMagicfontFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41756:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipFlag", wireType)
			}
			m.VipFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41783:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthFlag", wireType)
			}
			m.AuthFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41784:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForbidFlag", wireType)
			}
			m.ForbidFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForbidFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41804:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GodForbid", wireType)
			}
			m.GodForbid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GodForbid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41805:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GodFlag", wireType)
			}
			m.GodFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GodFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41950:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CharmLevel", wireType)
			}
			m.CharmLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CharmLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41973:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CharmShown", wireType)
			}
			m.CharmShown = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CharmShown |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41993:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreshnewsNotifyFlag", wireType)
			}
			m.FreshnewsNotifyFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FreshnewsNotifyFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41999:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApolloVipLevel", wireType)
			}
			m.ApolloVipLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApolloVipLevel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42003:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApolloVipFlag", wireType)
			}
			m.ApolloVipFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApolloVipFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42005:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnC2CVip", wireType)
			}
			m.PstnC2CVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnC2CVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42006:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnMultiVip", wireType)
			}
			m.PstnMultiVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnMultiVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42007:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnEverC2CVip", wireType)
			}
			m.PstnEverC2CVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnEverC2CVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42008:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnEverMultiVip", wireType)
			}
			m.PstnEverMultiVip = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnEverMultiVip |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42011:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnMultiTryFlag", wireType)
			}
			m.PstnMultiTryFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnMultiTryFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42012:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PstnC2CTryFlag", wireType)
			}
			m.PstnC2CTryFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PstnC2CTryFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42024:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscribeNearbyassistantSwitch", wireType)
			}
			m.SubscribeNearbyassistantSwitch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubscribeNearbyassistantSwitch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42051:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TorchbearerFlag", wireType)
			}
			m.TorchbearerFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TorchbearerFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42073:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreloadDisableFlag", wireType)
			}
			m.PreloadDisableFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PreloadDisableFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42075:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMedalwallFlag", wireType)
			}
			m.ReqMedalwallFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMedalwallFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42092:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyOnLikeRankingListFlag", wireType)
			}
			m.NotifyOnLikeRankingListFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyOnLikeRankingListFlag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42980:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApolloStatus", wireType)
			}
			m.ApolloStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApolloStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0X5Eb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0X5Eb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOidb0X5Eb(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOidb0X5Eb
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOidb0X5Eb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOidb0X5Eb
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOidb0X5Eb
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOidb0X5Eb
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOidb0X5Eb        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOidb0X5Eb          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOidb0X5Eb = fmt.Errorf("proto: unexpected end of group")
)
