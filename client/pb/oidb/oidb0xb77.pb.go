// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: client/pb/oidb/oidb0xb77.proto

package oidb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DB77ReqBody struct {
	AppId       uint64           `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	AppType     uint32           `protobuf:"varint,2,opt,name=appType,proto3" json:"appType,omitempty"`
	MsgStyle    uint32           `protobuf:"varint,3,opt,name=msgStyle,proto3" json:"msgStyle,omitempty"`
	SenderUin   uint64           `protobuf:"varint,4,opt,name=senderUin,proto3" json:"senderUin,omitempty"`
	ClientInfo  *DB77ClientInfo  `protobuf:"bytes,5,opt,name=clientInfo,proto3" json:"clientInfo,omitempty"`
	TextMsg     string           `protobuf:"bytes,6,opt,name=textMsg,proto3" json:"textMsg,omitempty"`
	ExtInfo     *DB77ExtInfo     `protobuf:"bytes,7,opt,name=extInfo,proto3" json:"extInfo,omitempty"`
	SendType    uint32           `protobuf:"varint,10,opt,name=sendType,proto3" json:"sendType,omitempty"`
	RecvUin     uint64           `protobuf:"varint,11,opt,name=recvUin,proto3" json:"recvUin,omitempty"`
	RichMsgBody *DB77RichMsgBody `protobuf:"bytes,12,opt,name=richMsgBody,proto3" json:"richMsgBody,omitempty"`
}

func (m *DB77ReqBody) Reset()         { *m = DB77ReqBody{} }
func (m *DB77ReqBody) String() string { return proto.CompactTextString(m) }
func (*DB77ReqBody) ProtoMessage()    {}
func (*DB77ReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_693544a1ba3c9f35, []int{0}
}
func (m *DB77ReqBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DB77ReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DB77ReqBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DB77ReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DB77ReqBody.Merge(m, src)
}
func (m *DB77ReqBody) XXX_Size() int {
	return m.Size()
}
func (m *DB77ReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_DB77ReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_DB77ReqBody proto.InternalMessageInfo

func (m *DB77ReqBody) GetAppId() uint64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *DB77ReqBody) GetAppType() uint32 {
	if m != nil {
		return m.AppType
	}
	return 0
}

func (m *DB77ReqBody) GetMsgStyle() uint32 {
	if m != nil {
		return m.MsgStyle
	}
	return 0
}

func (m *DB77ReqBody) GetSenderUin() uint64 {
	if m != nil {
		return m.SenderUin
	}
	return 0
}

func (m *DB77ReqBody) GetClientInfo() *DB77ClientInfo {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

func (m *DB77ReqBody) GetTextMsg() string {
	if m != nil {
		return m.TextMsg
	}
	return ""
}

func (m *DB77ReqBody) GetExtInfo() *DB77ExtInfo {
	if m != nil {
		return m.ExtInfo
	}
	return nil
}

func (m *DB77ReqBody) GetSendType() uint32 {
	if m != nil {
		return m.SendType
	}
	return 0
}

func (m *DB77ReqBody) GetRecvUin() uint64 {
	if m != nil {
		return m.RecvUin
	}
	return 0
}

func (m *DB77ReqBody) GetRichMsgBody() *DB77RichMsgBody {
	if m != nil {
		return m.RichMsgBody
	}
	return nil
}

type DB77ClientInfo struct {
	Platform           uint32 `protobuf:"varint,1,opt,name=platform,proto3" json:"platform,omitempty"`
	SdkVersion         string `protobuf:"bytes,2,opt,name=sdkVersion,proto3" json:"sdkVersion,omitempty"`
	AndroidPackageName string `protobuf:"bytes,3,opt,name=androidPackageName,proto3" json:"androidPackageName,omitempty"`
	AndroidSignature   string `protobuf:"bytes,4,opt,name=androidSignature,proto3" json:"androidSignature,omitempty"`
	IosBundleId        string `protobuf:"bytes,5,opt,name=iosBundleId,proto3" json:"iosBundleId,omitempty"`
	PcSign             string `protobuf:"bytes,6,opt,name=pcSign,proto3" json:"pcSign,omitempty"`
}

func (m *DB77ClientInfo) Reset()         { *m = DB77ClientInfo{} }
func (m *DB77ClientInfo) String() string { return proto.CompactTextString(m) }
func (*DB77ClientInfo) ProtoMessage()    {}
func (*DB77ClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_693544a1ba3c9f35, []int{1}
}
func (m *DB77ClientInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DB77ClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DB77ClientInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DB77ClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DB77ClientInfo.Merge(m, src)
}
func (m *DB77ClientInfo) XXX_Size() int {
	return m.Size()
}
func (m *DB77ClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DB77ClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DB77ClientInfo proto.InternalMessageInfo

func (m *DB77ClientInfo) GetPlatform() uint32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *DB77ClientInfo) GetSdkVersion() string {
	if m != nil {
		return m.SdkVersion
	}
	return ""
}

func (m *DB77ClientInfo) GetAndroidPackageName() string {
	if m != nil {
		return m.AndroidPackageName
	}
	return ""
}

func (m *DB77ClientInfo) GetAndroidSignature() string {
	if m != nil {
		return m.AndroidSignature
	}
	return ""
}

func (m *DB77ClientInfo) GetIosBundleId() string {
	if m != nil {
		return m.IosBundleId
	}
	return ""
}

func (m *DB77ClientInfo) GetPcSign() string {
	if m != nil {
		return m.PcSign
	}
	return ""
}

type DB77ExtInfo struct {
	CustomFeatureId []uint32 `protobuf:"varint,11,rep,packed,name=customFeatureId,proto3" json:"customFeatureId,omitempty"`
	ApnsWording     string   `protobuf:"bytes,12,opt,name=apnsWording,proto3" json:"apnsWording,omitempty"`
	GroupSaveDbFlag uint32   `protobuf:"varint,13,opt,name=groupSaveDbFlag,proto3" json:"groupSaveDbFlag,omitempty"`
	ReceiverAppId   uint32   `protobuf:"varint,14,opt,name=receiverAppId,proto3" json:"receiverAppId,omitempty"`
	MsgSeq          uint64   `protobuf:"varint,15,opt,name=msgSeq,proto3" json:"msgSeq,omitempty"`
}

func (m *DB77ExtInfo) Reset()         { *m = DB77ExtInfo{} }
func (m *DB77ExtInfo) String() string { return proto.CompactTextString(m) }
func (*DB77ExtInfo) ProtoMessage()    {}
func (*DB77ExtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_693544a1ba3c9f35, []int{2}
}
func (m *DB77ExtInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DB77ExtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DB77ExtInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DB77ExtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DB77ExtInfo.Merge(m, src)
}
func (m *DB77ExtInfo) XXX_Size() int {
	return m.Size()
}
func (m *DB77ExtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DB77ExtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DB77ExtInfo proto.InternalMessageInfo

func (m *DB77ExtInfo) GetCustomFeatureId() []uint32 {
	if m != nil {
		return m.CustomFeatureId
	}
	return nil
}

func (m *DB77ExtInfo) GetApnsWording() string {
	if m != nil {
		return m.ApnsWording
	}
	return ""
}

func (m *DB77ExtInfo) GetGroupSaveDbFlag() uint32 {
	if m != nil {
		return m.GroupSaveDbFlag
	}
	return 0
}

func (m *DB77ExtInfo) GetReceiverAppId() uint32 {
	if m != nil {
		return m.ReceiverAppId
	}
	return 0
}

func (m *DB77ExtInfo) GetMsgSeq() uint64 {
	if m != nil {
		return m.MsgSeq
	}
	return 0
}

type DB77RichMsgBody struct {
	Title      string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Summary    string `protobuf:"bytes,11,opt,name=summary,proto3" json:"summary,omitempty"`
	Brief      string `protobuf:"bytes,12,opt,name=brief,proto3" json:"brief,omitempty"`
	Url        string `protobuf:"bytes,13,opt,name=url,proto3" json:"url,omitempty"`
	PictureUrl string `protobuf:"bytes,14,opt,name=pictureUrl,proto3" json:"pictureUrl,omitempty"`
	Action     string `protobuf:"bytes,15,opt,name=action,proto3" json:"action,omitempty"`
	MusicUrl   string `protobuf:"bytes,16,opt,name=musicUrl,proto3" json:"musicUrl,omitempty"`
}

func (m *DB77RichMsgBody) Reset()         { *m = DB77RichMsgBody{} }
func (m *DB77RichMsgBody) String() string { return proto.CompactTextString(m) }
func (*DB77RichMsgBody) ProtoMessage()    {}
func (*DB77RichMsgBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_693544a1ba3c9f35, []int{3}
}
func (m *DB77RichMsgBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DB77RichMsgBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DB77RichMsgBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DB77RichMsgBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DB77RichMsgBody.Merge(m, src)
}
func (m *DB77RichMsgBody) XXX_Size() int {
	return m.Size()
}
func (m *DB77RichMsgBody) XXX_DiscardUnknown() {
	xxx_messageInfo_DB77RichMsgBody.DiscardUnknown(m)
}

var xxx_messageInfo_DB77RichMsgBody proto.InternalMessageInfo

func (m *DB77RichMsgBody) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DB77RichMsgBody) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *DB77RichMsgBody) GetBrief() string {
	if m != nil {
		return m.Brief
	}
	return ""
}

func (m *DB77RichMsgBody) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DB77RichMsgBody) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *DB77RichMsgBody) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DB77RichMsgBody) GetMusicUrl() string {
	if m != nil {
		return m.MusicUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*DB77ReqBody)(nil), "DB77ReqBody")
	proto.RegisterType((*DB77ClientInfo)(nil), "DB77ClientInfo")
	proto.RegisterType((*DB77ExtInfo)(nil), "DB77ExtInfo")
	proto.RegisterType((*DB77RichMsgBody)(nil), "DB77RichMsgBody")
}

func init() { proto.RegisterFile("client/pb/oidb/oidb0xb77.proto", fileDescriptor_693544a1ba3c9f35) }

var fileDescriptor_693544a1ba3c9f35 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0x8d, 0x9b, 0x36, 0xf9, 0xbc, 0x6e, 0x9a, 0x68, 0xf5, 0x09, 0x59, 0x08, 0x59, 0x56, 0x84,
	0x90, 0xc5, 0x21, 0x41, 0xe5, 0x90, 0x03, 0x27, 0x42, 0xa9, 0x94, 0x43, 0x11, 0xda, 0x50, 0x90,
	0xb8, 0x6d, 0xec, 0x8d, 0x59, 0xd5, 0xf6, 0x6e, 0xd7, 0x76, 0x94, 0xfc, 0x0b, 0xfe, 0x10, 0x07,
	0x6e, 0x1c, 0x7b, 0xe0, 0xc0, 0x11, 0x25, 0x7f, 0x04, 0xed, 0xac, 0x9d, 0xba, 0x81, 0x4b, 0x94,
	0xf7, 0x76, 0x3c, 0xf3, 0xe6, 0xcd, 0x0c, 0xf2, 0xc2, 0x84, 0xb3, 0xac, 0x18, 0xcb, 0xc5, 0x58,
	0xf0, 0xc8, 0xfc, 0xbc, 0x58, 0x2f, 0x26, 0x93, 0x91, 0x54, 0xa2, 0x10, 0xc3, 0x9f, 0x47, 0xc8,
	0xb9, 0x98, 0x4e, 0x26, 0x84, 0xdd, 0x4e, 0x45, 0xb4, 0xc1, 0xff, 0xa3, 0x13, 0x2a, 0xe5, 0x2c,
	0x72, 0x2d, 0xdf, 0x0a, 0x8e, 0x89, 0x01, 0xd8, 0x45, 0x5d, 0x2a, 0xe5, 0x87, 0x8d, 0x64, 0xee,
	0x91, 0x6f, 0x05, 0x3d, 0x52, 0x43, 0xfc, 0x18, 0xfd, 0x97, 0xe6, 0xf1, 0xbc, 0xd8, 0x24, 0xcc,
	0x6d, 0xc3, 0xd3, 0x1e, 0xe3, 0x27, 0xc8, 0xce, 0x59, 0x16, 0x31, 0x75, 0xcd, 0x33, 0xf7, 0x18,
	0xf2, 0xdd, 0x13, 0x78, 0x8c, 0x90, 0xd1, 0x36, 0xcb, 0x96, 0xc2, 0x3d, 0xf1, 0xad, 0xc0, 0x39,
	0xef, 0x8f, 0xb4, 0x96, 0x37, 0x7b, 0x9a, 0x34, 0x42, 0xb4, 0x88, 0x82, 0xad, 0x8b, 0xab, 0x3c,
	0x76, 0x3b, 0xbe, 0x15, 0xd8, 0xa4, 0x86, 0xf8, 0x19, 0xea, 0xb2, 0xb5, 0xc9, 0xd3, 0x85, 0x3c,
	0xa7, 0x90, 0xe7, 0xad, 0xe1, 0x48, 0xfd, 0xa8, 0xc5, 0xea, 0xfa, 0xd0, 0x07, 0x32, 0x62, 0x6b,
	0xac, 0xb3, 0x2b, 0x16, 0xae, 0xb4, 0x54, 0x07, 0xa4, 0xd6, 0x10, 0x9f, 0x23, 0x47, 0xf1, 0xf0,
	0xcb, 0x55, 0x1e, 0x6b, 0x87, 0xdc, 0x53, 0xa8, 0x30, 0x80, 0x0a, 0xe4, 0x9e, 0x27, 0xcd, 0xa0,
	0xe1, 0xd6, 0x42, 0x67, 0x0f, 0x5b, 0xd1, 0xc5, 0x65, 0x42, 0x8b, 0xa5, 0x50, 0x29, 0x98, 0xdb,
	0x23, 0x7b, 0x8c, 0x3d, 0x84, 0xf2, 0xe8, 0xe6, 0x23, 0x53, 0x39, 0x17, 0x19, 0x58, 0x6c, 0x93,
	0x06, 0x83, 0x47, 0x08, 0xd3, 0x2c, 0x52, 0x82, 0x47, 0xef, 0x69, 0x78, 0x43, 0x63, 0xf6, 0x8e,
	0xa6, 0xc6, 0x6f, 0x9b, 0xfc, 0xe3, 0x05, 0x3f, 0x47, 0x83, 0x8a, 0x9d, 0xf3, 0x38, 0xa3, 0x45,
	0xa9, 0x18, 0x0c, 0xc0, 0x26, 0x7f, 0xf1, 0xd8, 0x47, 0x0e, 0x17, 0xf9, 0xb4, 0xcc, 0xa2, 0x84,
	0xcd, 0x22, 0x18, 0x84, 0x4d, 0x9a, 0x14, 0x7e, 0x84, 0x3a, 0x32, 0xd4, 0x1f, 0x54, 0xbe, 0x57,
	0x68, 0xf8, 0xdd, 0x32, 0xbb, 0x53, 0xf9, 0x8c, 0x03, 0xd4, 0x0f, 0xcb, 0xbc, 0x10, 0xe9, 0x25,
	0x83, 0xd4, 0xb3, 0xc8, 0x75, 0xfc, 0x76, 0xd0, 0x23, 0x87, 0xb4, 0xae, 0x49, 0x65, 0x96, 0x7f,
	0x12, 0x2a, 0xe2, 0x59, 0x0c, 0x96, 0xda, 0xa4, 0x49, 0xe9, 0x5c, 0xb1, 0x12, 0xa5, 0x9c, 0xd3,
	0x15, 0xbb, 0x58, 0x5c, 0x26, 0x34, 0x76, 0x7b, 0x60, 0xda, 0x21, 0x8d, 0x9f, 0xa2, 0x9e, 0x62,
	0x21, 0xe3, 0x2b, 0xa6, 0x5e, 0xc3, 0xe6, 0x9e, 0x41, 0xdc, 0x43, 0x52, 0xf7, 0xa0, 0xf7, 0x92,
	0xdd, 0xba, 0x7d, 0x98, 0x6e, 0x85, 0x86, 0xdf, 0x2c, 0xd4, 0x3f, 0x98, 0xa4, 0xbe, 0x81, 0x82,
	0x17, 0x89, 0xd9, 0x11, 0x9b, 0x18, 0xa0, 0x17, 0x24, 0x2f, 0xd3, 0x94, 0xaa, 0x0d, 0x2c, 0x88,
	0x4d, 0x6a, 0xa8, 0xe3, 0x17, 0x8a, 0xb3, 0x65, 0xd5, 0x87, 0x01, 0x78, 0x80, 0xda, 0xa5, 0x4a,
	0x40, 0xb5, 0x4d, 0xf4, 0x5f, 0x3d, 0x65, 0xc9, 0x43, 0x6d, 0xc1, 0xb5, 0x4a, 0x40, 0xa6, 0x4d,
	0x1a, 0x8c, 0xd6, 0x48, 0xc3, 0x42, 0x6f, 0x40, 0xdf, 0xf8, 0x6c, 0x10, 0xdc, 0x58, 0x99, 0xf3,
	0x50, 0x7f, 0x35, 0x80, 0x97, 0x3d, 0x9e, 0xfa, 0x3f, 0xb6, 0x9e, 0x75, 0xb7, 0xf5, 0xac, 0xdf,
	0x5b, 0xcf, 0xfa, 0xba, 0xf3, 0x5a, 0x77, 0x3b, 0xaf, 0xf5, 0x6b, 0xe7, 0xb5, 0x3e, 0x77, 0x46,
	0xaf, 0xf4, 0xb1, 0x2f, 0x3a, 0x70, 0xe8, 0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x33, 0x3e,
	0xcc, 0xce, 0x0a, 0x04, 0x00, 0x00,
}

func (m *DB77ReqBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DB77ReqBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DB77ReqBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RichMsgBody != nil {
		{
			size, err := m.RichMsgBody.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintOidb0Xb77(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.RecvUin != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.RecvUin))
		i--
		dAtA[i] = 0x58
	}
	if m.SendType != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.SendType))
		i--
		dAtA[i] = 0x50
	}
	if m.ExtInfo != nil {
		{
			size, err := m.ExtInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintOidb0Xb77(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.TextMsg) > 0 {
		i -= len(m.TextMsg)
		copy(dAtA[i:], m.TextMsg)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.TextMsg)))
		i--
		dAtA[i] = 0x32
	}
	if m.ClientInfo != nil {
		{
			size, err := m.ClientInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintOidb0Xb77(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.SenderUin != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.SenderUin))
		i--
		dAtA[i] = 0x20
	}
	if m.MsgStyle != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.MsgStyle))
		i--
		dAtA[i] = 0x18
	}
	if m.AppType != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.AppType))
		i--
		dAtA[i] = 0x10
	}
	if m.AppId != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DB77ClientInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DB77ClientInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DB77ClientInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PcSign) > 0 {
		i -= len(m.PcSign)
		copy(dAtA[i:], m.PcSign)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.PcSign)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.IosBundleId) > 0 {
		i -= len(m.IosBundleId)
		copy(dAtA[i:], m.IosBundleId)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.IosBundleId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AndroidSignature) > 0 {
		i -= len(m.AndroidSignature)
		copy(dAtA[i:], m.AndroidSignature)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.AndroidSignature)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AndroidPackageName) > 0 {
		i -= len(m.AndroidPackageName)
		copy(dAtA[i:], m.AndroidPackageName)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.AndroidPackageName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SdkVersion) > 0 {
		i -= len(m.SdkVersion)
		copy(dAtA[i:], m.SdkVersion)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.SdkVersion)))
		i--
		dAtA[i] = 0x12
	}
	if m.Platform != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.Platform))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DB77ExtInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DB77ExtInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DB77ExtInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MsgSeq != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.MsgSeq))
		i--
		dAtA[i] = 0x78
	}
	if m.ReceiverAppId != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.ReceiverAppId))
		i--
		dAtA[i] = 0x70
	}
	if m.GroupSaveDbFlag != 0 {
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(m.GroupSaveDbFlag))
		i--
		dAtA[i] = 0x68
	}
	if len(m.ApnsWording) > 0 {
		i -= len(m.ApnsWording)
		copy(dAtA[i:], m.ApnsWording)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.ApnsWording)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CustomFeatureId) > 0 {
		dAtA5 := make([]byte, len(m.CustomFeatureId)*10)
		var j4 int
		for _, num := range m.CustomFeatureId {
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}

func (m *DB77RichMsgBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DB77RichMsgBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DB77RichMsgBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MusicUrl) > 0 {
		i -= len(m.MusicUrl)
		copy(dAtA[i:], m.MusicUrl)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.MusicUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.Action) > 0 {
		i -= len(m.Action)
		copy(dAtA[i:], m.Action)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.Action)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.PictureUrl) > 0 {
		i -= len(m.PictureUrl)
		copy(dAtA[i:], m.PictureUrl)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.PictureUrl)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Brief) > 0 {
		i -= len(m.Brief)
		copy(dAtA[i:], m.Brief)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.Brief)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Summary) > 0 {
		i -= len(m.Summary)
		copy(dAtA[i:], m.Summary)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.Summary)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintOidb0Xb77(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}

func encodeVarintOidb0Xb77(dAtA []byte, offset int, v uint64) int {
	offset -= sovOidb0Xb77(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DB77ReqBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.AppId))
	}
	if m.AppType != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.AppType))
	}
	if m.MsgStyle != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.MsgStyle))
	}
	if m.SenderUin != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.SenderUin))
	}
	if m.ClientInfo != nil {
		l = m.ClientInfo.Size()
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.TextMsg)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	if m.ExtInfo != nil {
		l = m.ExtInfo.Size()
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	if m.SendType != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.SendType))
	}
	if m.RecvUin != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.RecvUin))
	}
	if m.RichMsgBody != nil {
		l = m.RichMsgBody.Size()
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	return n
}

func (m *DB77ClientInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Platform != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.Platform))
	}
	l = len(m.SdkVersion)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.AndroidPackageName)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.AndroidSignature)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.IosBundleId)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.PcSign)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	return n
}

func (m *DB77ExtInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CustomFeatureId) > 0 {
		l = 0
		for _, e := range m.CustomFeatureId {
			l += sovOidb0Xb77(uint64(e))
		}
		n += 1 + sovOidb0Xb77(uint64(l)) + l
	}
	l = len(m.ApnsWording)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	if m.GroupSaveDbFlag != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.GroupSaveDbFlag))
	}
	if m.ReceiverAppId != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.ReceiverAppId))
	}
	if m.MsgSeq != 0 {
		n += 1 + sovOidb0Xb77(uint64(m.MsgSeq))
	}
	return n
}

func (m *DB77RichMsgBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.Summary)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.Brief)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.PictureUrl)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.Action)
	if l > 0 {
		n += 1 + l + sovOidb0Xb77(uint64(l))
	}
	l = len(m.MusicUrl)
	if l > 0 {
		n += 2 + l + sovOidb0Xb77(uint64(l))
	}
	return n
}

func sovOidb0Xb77(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOidb0Xb77(x uint64) (n int) {
	return sovOidb0Xb77(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DB77ReqBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0Xb77
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DB77ReqBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DB77ReqBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppType", wireType)
			}
			m.AppType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppType |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgStyle", wireType)
			}
			m.MsgStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgStyle |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderUin", wireType)
			}
			m.SenderUin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderUin |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClientInfo == nil {
				m.ClientInfo = &DB77ClientInfo{}
			}
			if err := m.ClientInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtInfo == nil {
				m.ExtInfo = &DB77ExtInfo{}
			}
			if err := m.ExtInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendType", wireType)
			}
			m.SendType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendType |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecvUin", wireType)
			}
			m.RecvUin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RecvUin |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RichMsgBody", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RichMsgBody == nil {
				m.RichMsgBody = &DB77RichMsgBody{}
			}
			if err := m.RichMsgBody.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0Xb77(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DB77ClientInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0Xb77
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DB77ClientInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DB77ClientInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SdkVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SdkVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidPackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidPackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidSignature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidSignature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosBundleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IosBundleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PcSign", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PcSign = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0Xb77(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DB77ExtInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0Xb77
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DB77ExtInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DB77ExtInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 11:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0Xb77
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CustomFeatureId = append(m.CustomFeatureId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOidb0Xb77
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOidb0Xb77
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthOidb0Xb77
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CustomFeatureId) == 0 {
					m.CustomFeatureId = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOidb0Xb77
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CustomFeatureId = append(m.CustomFeatureId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomFeatureId", wireType)
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApnsWording", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApnsWording = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupSaveDbFlag", wireType)
			}
			m.GroupSaveDbFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupSaveDbFlag |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverAppId", wireType)
			}
			m.ReceiverAppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverAppId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgSeq", wireType)
			}
			m.MsgSeq = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgSeq |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0Xb77(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DB77RichMsgBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOidb0Xb77
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DB77RichMsgBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DB77RichMsgBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Summary", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Summary = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Brief", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Brief = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PictureUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PictureUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Action = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MusicUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOidb0Xb77(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthOidb0Xb77
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOidb0Xb77(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOidb0Xb77
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOidb0Xb77
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOidb0Xb77
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOidb0Xb77
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOidb0Xb77
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOidb0Xb77        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOidb0Xb77          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOidb0Xb77 = fmt.Errorf("proto: unexpected end of group")
)
